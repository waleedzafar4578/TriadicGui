import{r as a,j as e,a as J}from"./react-CKuBd5Um.js";import{c as e1}from"./react-dom-D7URrLbC.js";import{B as i1,L as M}from"./react-router-dom-IcO0ky0P.js";import{l as F}from"./monaco-editor-DTcSDHPy.js";import{M as t1}from"./react-monaco-editor-D4wPWld5.js";import{l as s1}from"./react-tabulator-BMY9F65V.js";/* empty css                         */import{D as n1,a as r1,b as a1,B as l1}from"./@mui-uS0qJmvh.js";import{S as d1,t as C1}from"./react-syntax-highlighter-C07FGQJM.js";import{d as c1,e as A}from"./react-router-DcT9jH04.js";import"./@babel-C4aUWLRb.js";import"./scheduler-CzFDRTuY.js";import"./@remix-run-CcLa13UN.js";import"./pick-react-known-prop-DzgNgAfJ.js";import"./es6-promise-CdtIYHkE.js";import"./prop-types-BKNjMPK8.js";import"./clsx-B-dksMZM.js";import"./@emotion-Dtxd2wOf.js";import"./hoist-non-react-statics-Buxaj0Kl.js";import"./react-is-8JwjhRSi.js";import"./stylis-NkKAe6Bn.js";import"./react-transition-group-Iw4soTe1.js";import"./refractor-BUB-gfPn.js";import"./hastscript-CNav0U-G.js";import"./property-information-d_1UYrTS.js";import"./xtend-CeaPpq3n.js";import"./space-separated-tokens-CMBzgJJ4.js";import"./comma-separated-tokens-DgTuumFk.js";import"./hast-util-parse-selector-Cqsfuk9Y.js";import"./parse-entities-BPS6ijZJ.js";import"./character-entities-legacy-BW45UVHJ.js";import"./character-reference-invalid-AKrgFUtc.js";import"./is-decimal-Dxw1ZLrO.js";import"./is-hexadecimal-Bc6OsCR9.js";import"./is-alphanumerical-BsviXVJV.js";import"./is-alphabetical-BlcIJk-E.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))C(i);new MutationObserver(i=>{for(const d of i)if(d.type==="childList")for(const o of d.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&C(o)}).observe(document,{childList:!0,subtree:!0});function n(i){const d={};return i.integrity&&(d.integrity=i.integrity),i.referrerPolicy&&(d.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?d.credentials="include":i.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function C(i){if(i.ep)return;i.ep=!0;const d=n(i);fetch(i.href,d)}})();const g="http://127.0.0.1:4000",S={login_api:g+"/ln",create_account_api:g+"/ca",help_api:g+"/help",result_api:g+"/result",health_check_api:g+"/health_check",process_query_api:g+"/pq",token_check_api:g+"/checkt",get_database_api:g+"/gdb"},o1={tokenizer:{root:[[/\bSELECT\b/,"keyword"],[/\bRENAME\b/,"keyword"],[/\bFROM\b/,"keyword"],[/\bWHERE\b/,"keyword"],[/\bSEARCH\b/,"keyword"],[/\bNULL\b/,"keyword"],[/\bTRUE\b/,"keyword"],[/\bFALSE\b/,"keyword"],[/\bINT\b/,"keyword"],[/\bVARCHAR\b/,"keyword"],[/\bCREATE\b/,"keyword"],[/\bTABLE\b/,"keyword"],[/\bIF\b/,"keyword"],[/\bEXISTS\b/,"keyword"],[/\bPRIMARY KEY\b/,"keyword"],[/\bFOREIGN KEY\b/,"keyword"],[/\bREFERENCES\b/,"keyword"],[/\bINSERT INTO\b/,"keyword"],[/\bVALUES\b/,"keyword"],[/\bUPDATE\b/,"keyword"],[/\bSET\b/,"keyword"],[/\bDELETE\b/,"keyword"],[/\bDROP\b/,"keyword"],[/\bDATABASE\b/,"keyword"],[/\bUSE\b/,"keyword"],[/\bNOT NULL\b/,"keyword"],[/\bSHOW\b/,"keyword"],[/\bT\b/,"keyword"],[/\bL\b/,"keyword"],[/\bF\b/,"keyword"],[/\bCHAR\b/,"keyword"],[/\bFLOAT\b/,"keyword"],[/\bSTRING\b/,"keyword"],[/\bBOOLEAN\b/,"keyword"],[/\bTEXT\b/,"keyword"],[/\bUNIQUE\b/,"keyword"],[/[;,]/,"delimiter"],[/#.*/,"comment"],[/[+\-*/%=<>!?&|]/,"operator"],[/[()\\[\]{}]/,"delimiter.parenthesis"],[/\b\w+\b/,"identifier"]]}},h1=({status:s,output:r})=>{const[n,C]=a.useState(null);console.log(n),a.useEffect(()=>{if(s==="Table")try{const c=JSON.parse(r);C(c)}catch(c){console.error("Error parsing JSON:",c)}else C(null)},[s,r]);const i=n?n.column_name.map((c,x)=>({title:c,field:`field${x}`,width:150})):[],d=n?n.row.map(c=>{const x={};return c.forEach((p,L)=>{x[`field${L}`]=p}),x}):[];let o="";return(s==="Db"||s==="Tb")&&(o=r.split(" ")),e.jsxs(e.Fragment,{children:[e.jsx("h6",{children:s}),s==="Table"&&n&&e.jsxs("div",{children:[e.jsxs("h2",{children:["Table: ",n.table_name]}),e.jsxs("h3",{children:["Columns: ",n.column_name.join(", ")]}),e.jsx(s1.ReactTabulator,{data:d,columns:i,layout:"fitColumns"})]}),s==="QP"&&e.jsx("p",{children:r}),s==="Db"&&e.jsxs(e.Fragment,{children:[e.jsx("h4",{children:"Available Databases"}),e.jsx("ul",{style:{display:"flex",flexDirection:"column",alignItems:"start"},children:o.map((c,x)=>e.jsx("li",{children:c},x))})]}),s==="Tb"&&e.jsxs(e.Fragment,{children:[e.jsx("h4",{children:"Available Tables In Selected Database"}),e.jsx("ul",{style:{display:"flex",flexDirection:"column",alignItems:"start"},children:o.map((c,x)=>e.jsx("li",{children:c},x))})]}),s==="Err"&&e.jsx(e.Fragment,{children:e.jsx("h3",{style:{color:"red"},children:r})})]})};function x1({isOpen:s,toggleDrawer:r,...n}){return e.jsx(e.Fragment,{children:e.jsxs("div",{className:`drawer ${s?"open":""}`,children:[e.jsx("button",{className:"close-button",onClick:r,children:"Close"}),e.jsx("nav",{children:e.jsxs("ul",{className:"drawer-list",children:[e.jsx("li",{className:"drwaer-item",onClick:n.increaseFontSize,children:"Inc Font"}),e.jsx("li",{className:"drwaer-item",onClick:n.decreaseFontSize,children:"Dec Font"}),e.jsx("li",{className:"drwaer-item",children:"Themes"}),e.jsx("li",{className:"drwaer-item",onClick:n.handleSave,children:"Save"}),e.jsx("li",{className:"drwaer-item",children:"Select File"}),e.jsx("li",{className:"drawer-item",children:"Logout"})]})})]})})}const j1=()=>{const[s,r]=a.useState(!1),[n,C]=a.useState(!1),[i,d]=a.useState(""),[o,c]=a.useState(""),[x,p]=a.useState(""),L=a.useRef(null),[f,b]=a.useState(14),[m,U]=a.useState("hc-black"),N=a.useRef(),[V,P]=a.useState(window.innerWidth<825),[y,Q]=a.useState(!1);a.useEffect(()=>{F.register({id:"customLanguage"}),F.setMonarchTokensProvider("customLanguage",o1)},[]),a.useEffect(()=>{i&&localStorage.setItem("editorContent",i)},[i]),console.log(V),a.useEffect(()=>{const l=localStorage.getItem("editorContent");l&&d(l)},[]),a.useEffect(()=>{function l(){P(window.innerWidth<825)}return window.addEventListener("resize",l),()=>{window.removeEventListener("resize",l)}},[]);function _(){Q(!y)}function W(){C(!n)}const q=l=>{d(l)};function I(){r(!0)}function R(){r(!1)}const z=()=>{const l=L.current;if(!l)return"";const h=l.getSelection();return h?l.getModel().getValueInRange(h):""},k=l=>{const h=l?z():i;Y(h)},Y=async l=>{const h=localStorage.getItem("token");console.log(h);try{const u=await(await fetch(S.process_query_api,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:h,query:l})})).json();console.log(u),p(u.query_information),c(u.status)}catch(j){console.error("Error fetching data:",j)}},Z=()=>{b(f+1)},D=()=>{f>1&&b(f-1)},v=l=>{U(l)},H=()=>{const l=window.prompt("Enter filename:","Query.tri");if(!l)return;const h=new Blob([i],{type:"text/plain"}),j=window.URL.createObjectURL(h),u=document.createElement("a");u.href=j,u.download=l,document.body.appendChild(u),u.click(),window.URL.revokeObjectURL(j),document.body.removeChild(u)},G=l=>{const h=l.target.files[0],j=new FileReader;j.onload=()=>{d(j.result),localStorage.setItem("editorContent",j.result)},j.readAsText(h)};function K(){N.current.click()}const[B,$]=a.useState("None");a.useEffect(()=>{const h=setInterval(async()=>{const j=localStorage.getItem("token"),O=await(await fetch(S.get_database_api,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:j})})).json();console.log(O),$(O)},1e3);return()=>clearInterval(h)},[]);const X={increaseFontSize:Z,decreaseFontSize:D,handleSave:H};return e.jsxs(e.Fragment,{children:[V?e.jsxs("div",{className:"drawer-menu",children:[e.jsx("button",{onClick:()=>{k(!0),I()},children:"Run"}),e.jsxs("text",{className:"db_select",children:["Selected Database: ",B," "]}),y?e.jsx(x1,{isOpen:y,toggleDrawer:_,...X}):e.jsx("button",{onClick:_,children:"Open"})]}):e.jsxs("div",{id:"btt",children:[e.jsx("button",{onClick:()=>{k(!0),I()},children:"Run"}),e.jsx("button",{onClick:Z,children:"Inc Font"}),e.jsx("button",{onClick:D,children:"Dec Font"}),e.jsxs("div",{className:"dropdown",children:[e.jsx("button",{className:"drop-down-button",onClick:W,children:"Themes"}),n&&e.jsxs("ul",{className:"drop-down-menu",children:[e.jsx("li",{className:"dropdown-item",onClick:()=>v("hc-black"),children:"HC-Black"}),e.jsx("li",{className:"dropdown-item",onClick:()=>v("vs-dark"),children:"VS-Dark"}),e.jsx("li",{className:"dropdown-item",onClick:()=>v("vs-light"),children:"VS-Light"})]})]}),e.jsx("button",{onClick:H,children:"Save"}),e.jsx("button",{onClick:K,children:"Select File"}),e.jsxs("text",{className:"db_select",children:["Selected Database: ",B," "]}),e.jsx("input",{className:"handleLoad",type:"file",onChange:G,ref:N})]}),e.jsxs("div",{children:[e.jsx(t1,{width:"100%",height:"89vh",language:"customLanguage",theme:m,value:i,options:{wordWrap:"on",wordWrapColumn:80,fontSize:f},onChange:q,editorDidMount:l=>{L.current=l},className:"rounded-editor"}),e.jsxs(n1,{open:s,onClose:R,maxWidth:"lg",fullWidth:!0,children:[e.jsx(r1,{style:{backgroundColor:m==="hc-black"||m==="vs-dark"?"#403E3E":"white",color:m==="hc-black"||m==="vs-dark"?"white":"black"},children:e.jsx(h1,{status:o,output:x})}),e.jsx(a1,{style:{backgroundColor:m==="hc-black"||m==="vs-dark"?"#403E3E":"white",color:m==="hc-black"||m==="vs-dark"?"white":"black"},children:e.jsx(l1,{onClick:R,children:"Close"})})]})]})]})},m1=()=>e.jsx(j1,{}),t=({code:s})=>{const r={padding:"15px",borderRadius:"8px",backgroundColor:"#282c34",color:"#302f2f",overflowX:"auto"};return e.jsx("div",{className:"code_show_main",children:e.jsx(d1,{language:"sql",style:C1,customStyle:r,children:s})})};function u1(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"QS",align:"center",children:"Quick Start"}),e.jsxs("div",{className:"content_quick",children:[e.jsx("h1",{children:"Peirce’s Triadic Logic"}),e.jsxs("p",{children:["Peirce’s Triadic Logic is a unique logical framework developed by the ",e.jsx("strong",{children:" American philosopher "})," and logician ",e.jsx("strong",{className:"nm1",children:"Charles Sanders Peirce"}),".Unlike classical binary logic, which operates with two truth values (TRUE and FALSE), Peirce’s logic introduces a third truth value: ",e.jsx("strong",{children:"LIMIT"}),".This addition allows for a more nuanced representation of uncertainty and indeterminacy in logical expressions."]}),e.jsx("h2",{children:"The Three Truth Values:"}),e.jsxs("table",{children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Value"}),e.jsx("th",{children:"Description"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"TRUE"})}),e.jsx("td",{children:"Represents statements or conditions that are definitively correct or accurate. Corresponds to the traditional binary logic value of TRUE."})]}),e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"FALSE"})}),e.jsx("td",{children:"Represents statements or conditions that are definitively incorrect or inaccurate. Corresponds to the traditional binary logic value of FALSE."})]}),e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"LIMIT"})}),e.jsxs("td",{children:["Introduces a middle ground between TRUE and FALSE, representing a state of indeterminacy, uncertainty, or partial truth.",e.jsx("br",{})," Addresses scenarios where information is incomplete, ambiguous, or where a definitive TRUE or FALSE value cannot be assigned."]})]})]})]}),e.jsx("h2",{children:"Benefits of Triadic Logic:"}),e.jsxs("li",{children:[e.jsx("strong",{children:"Handling Uncertainty"}),": Triadic logic is particularly useful in scenarios where binary logic falls short, such as in databases dealing with incomplete or ambiguous data. The LIMIT value allows for a more flexible and accurate representation of such data."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Improved Data Analysis"}),": By incorporating a third truth value, data analysis can be more nuanced, accommodating degrees of truth and improving decision-making processes."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Enhanced Expressiveness"}),": Triadic logic expands the expressiveness of logical statements, allowing for a richer and more detailed representation of real-world phenomena."]}),e.jsx("h2",{children:"Application in Your Database System:"}),e.jsx("p",{children:"In the context of your relational database project:"}),e.jsxs("li",{children:[e.jsx("strong",{children:"Data Storage"}),": Each cell in your database can have one of the three statuses: TRUE, FALSE, or LIMIT. This enables a more sophisticated and accurate representation of the stored data."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Queries and Operations"}),": Users can perform queries and operations that take into account the third truth value, allowing for more complex and meaningful data interactions. Custom operators can be defined to handle the LIMIT value effectively, providing users with powerful tools for data manipulation and analysis."]}),e.jsx("h2",{children:"Example:"}),e.jsx("p",{children:"Suppose you have a database storing sensor data, and some readings are ambiguous or incomplete. Using binary logic, you would have to either exclude these readings or inaccurately classify them as TRUE or FALSE. With triadic logic, you can assign a LIMIT value to these ambiguous readings, maintaining the integrity and completeness of your data."}),e.jsx(t,{code:"SELECT * FROM sensor_data WHERE status = 'LIMIT';"}),e.jsx("p",{children:"This query would retrieve all records where the sensor data is uncertain or incomplete, allowing for targeted analysis and decision-making."}),e.jsx("strong",{className:"nm2",children:"In Peirce’s Triadic Logic, TRUE is abbreviated as T, FALSE as F, and LIMIT as L."}),e.jsx("h1",{children:"SQL Query Categories"}),e.jsx("h2",{children:"Data Definition Language (DDL)"}),e.jsx("p",{children:"Data Definition Language (DDL) is a subset of SQL (Structured Query Language) used to define and manage all the structures in a database. It deals with the creation, alteration, and deletion of database objects such as tables, indexes, and schemas. DDL commands are crucial for setting up and maintaining the database schema."}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm",children:"CREATE"}),e.jsx("p",{children:"The CREATE keyword in SQL is used to create new database objects such as tables, views, indexes, and databases. It is a part of the Data Definition Language (DDL), which deals with the structure of the database."}),e.jsxs("div",{className:"Inm",children:[e.jsx("strong",{className:"Innm",children:"DATABASE"}),e.jsx("p",{children:"CREATE DATABASE: Used to create a new database."}),e.jsx(t,{code:"CREATE DATABASE _db_name"})]}),e.jsxs("div",{className:"Inm",children:[e.jsx("strong",{className:"Innm",children:"TABLE"}),e.jsx("p",{children:"CREATE TABLE: Used to create a new table within a database."}),e.jsx(t,{code:"CREATE TABLE _tb_name (  _column_name DATATYPE CONSTRAINT );"}),e.jsxs("div",{className:"In_datatype",children:[e.jsx("h2",{children:"Suppoerted Datatypes"}),e.jsxs("table",{children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Data Types"}),e.jsx("th",{children:"Description"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"BOOL"})}),e.jsxs("td",{children:["A boolean data type can hold one of two values: TRUE or FALSE.",e.jsx(t,{code:`CREATE TABLE example (
    is_active BOOL
);

INSERT INTO example (is_active) VALUES (TRUE :T), (FALSE :T);`})]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"INT"})}),e.jsxs("td",{children:["An integer data type is used to store whole numbers (both positive and negative) without any decimal points. Commonly used integer types include INT, SMALLINT, and BIGINT, differing mainly by the range of values they can store.",e.jsx(t,{code:`CREATE TABLE example (
    age INT
);

INSERT INTO example (age) VALUES (25 :F), (30 :L);`}),"INT is typically used for fields that require numerical data without fractions, such as counts, ages, and ID."]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"FLOAT"})}),e.jsxs("td",{children:["A floating-point number is a number that has a decimal point. It can represent fractional values as well as very large or very small numbers.",e.jsx(t,{code:`CREATE TABLE example (
    price FLOAT
);

INSERT INTO example (price) VALUES (19.99 :L), (100.50 :L);`})]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"STRING / TEXT"})}),e.jsxs("td",{children:["A variable-length character data type. Typically implemented as VARCHAR or TEXT in SQL.",e.jsx("br",{}),"With String:",e.jsx(t,{code:`CREATE TABLE example (
    STRING
);

INSERT INTO example (description) VALUES
 ('A short text' :L), ('A longer description that can vary in length':T);
`}),"With Text:",e.jsx(t,{code:`CREATE TABLE example (
    TEXT
);

INSERT INTO example (description) VALUES
 ('A short text' :L), ('A longer description that can vary in length':T);
`})]})]})]})]}),e.jsx("h2",{children:"Suppoerted Constrains"}),e.jsxs("table",{children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Constrain Name"}),e.jsx("th",{children:"Description"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"PRIMARY KEY"})}),e.jsxs("td",{children:["A combination of NOT NULL and UNIQUE. Uniquely identifies each row in a table. Each table can have only one primary key, which can consist of one or more columns.",e.jsxs("h3",{children:[e.jsx("br",{}),"It work like old sql:"]}),e.jsx(t,{code:`CREATE TABLE example (
    id INT PRIMARY KEY,
    gender CHAR
);`}),e.jsx(t,{code:`INSERT INTO example (id,gender)
VALUES
(1:T , M :T),
(2:T , M :L),
(3:T , M :L),
`}),e.jsxs("h3",{children:[e.jsx("br",{}),e.jsx("br",{}),"Primary key with ",e.jsx("strong",{children:"T"})," Degree/Status:"]}),e.jsx(t,{code:`CREATE TABLE example (
    id INT PRIMARY KEY(T),
    gender CHAR
);`}),"Here primary key with T means,it only check values must be unique which have degree T.",e.jsx("br",{}),e.jsx("h5",{children:"Example:"}),e.jsx(t,{code:`INSERT INTO example (id,gender)
VALUES
(1:T , M :T),
(2:T , M :L),
(3:T , M :L),
(3:L , M :T),
(4:F , M :T),
(4:T , F :T),
`}),e.jsx("br",{}),e.jsxs("h3",{children:[e.jsx("br",{}),e.jsx("br",{}),"Primary key with ",e.jsx("strong",{children:"F"})," Degree/Status:"]}),e.jsx(t,{code:`CREATE TABLE example (
    id INT PRIMARY KEY(F),
    gender CHAR
);`}),"Here primary key with T means,it only check values must be unique which have degree T.",e.jsxs("h3",{children:[e.jsx("br",{}),e.jsx("br",{}),"Primary key with ",e.jsx("strong",{children:"L"})," Degree/Status:"]}),e.jsx(t,{code:`CREATE TABLE example (
    id INT PRIMARY KEY(L),
    gender CHAR
);`}),"Here primary key with T means,it only check values must be unique which have degree T."]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"UNIQUE"})}),e.jsxs("td",{children:["Ensures that all values in a column (or a set of columns) are unique. No two rows can have the same value in the specified column(s).",e.jsx(t,{code:`CREATE TABLE example (
    cnic INT UNIQUE
);`}),e.jsx(t,{code:`CREATE TABLE example (
    cnic INT UNIQUE(T)
);`}),e.jsx(t,{code:`CREATE TABLE example (
    cnic INT UNIQUE(F)
);`}),e.jsx(t,{code:`CREATE TABLE example (
    cnic INT UNIQUE(L)
);`}),"INT is typically used for fields that require numerical data without fractions, such as counts, ages, and ID."]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"NOT NULL"})}),e.jsxs("td",{children:["Ensures that a column cannot have a NULL value.",e.jsx(t,{code:`CREATE TABLE example (
    id INT NOT NULL,
    name STRING NOT NULL
);`}),"In the above table, the id and name columns cannot be left empty (NULL)."]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("strong",{children:"DEFAULT"})}),e.jsxs("td",{children:["Provides a default value for a column when no value is specified.",e.jsx(t,{code:`CREATE TABLE example (
    id INT,
    gender CHAR DEFAULT (M :L))
);`})]})]})]})]})]})]})]}),e.jsx("li",{children:e.jsx("strong",{className:"nm4",children:"ALTER"})}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm",children:"DROP"}),e.jsx("h3",{children:"DROP DATABASE"}),e.jsx(t,{code:"DROP DATABASE _name;"}),e.jsx("h3",{children:"DROP TABLE"}),e.jsx(t,{code:"DROP TABLE _name;"})]}),e.jsx("h2",{children:"Data Query Language (DQL)"}),e.jsx("p",{children:"DQL is used to query the database and retrieve data."}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm",children:"SELECT"}),": Retrieves data from the database.",e.jsx(t,{code:`//Here fetching whole table from database.
SELECT * FROM table_name;`}),e.jsx(t,{code:`//Here fetching only 2 column from database.
SELECT 
(column_name1,column_name2)
FROM table_name;`}),e.jsx("h3",{children:"At this time,system provide only apply condition on one column."}),e.jsx(t,{code:`//Here fetching whole table from database but applying condition on column.
SELECT * 
FROM table_name 
WHERE 
column_name = (values:Degree);`})]}),e.jsx("h2",{children:"Data Manipulation Language (DML)"}),e.jsx("p",{children:"DML is used to insert, update, and delete data in the database."}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm",children:"INSERT"}),": Adds new data into the database.",e.jsx(t,{code:"INSERT INTO table_name (column1, column2) VALUES (value1:Degree, value2:Degree);"})]}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm4",children:"UPDATE"}),": Modifies existing data in the database.",e.jsx(t,{code:"UPDATE table_name SET column1 = value1 WHERE condition;"})]}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm4",children:"DELETE"}),": Removes data from the database.",e.jsx(t,{code:"DELETE FROM table_name WHERE condition;"})]}),e.jsx("h2",{children:"Other Helping Statement"}),e.jsx("p",{children:"These helping statement are different to different in system."}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm",children:"RENAME"}),": Change name of existing database name.",e.jsx(t,{code:"RENAME DATABASE "})]}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm",children:"SEARCH"}),": Find database from login user container.",e.jsx(t,{code:"SEARCH DATABASE _db_name;"}),e.jsx(t,{code:"SEARCH TABLE _tb_name;"})]}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm",children:"USE"}),": It use for select database.",e.jsx(t,{code:"USE DATABASE _database_name;"})]}),e.jsxs("li",{children:[e.jsx("strong",{className:"nm",children:"SHOW"}),e.jsx(t,{code:`//It use for show all databases which belong to login user.
SHOW DATABASE;`}),e.jsx(t,{code:`//It use for show all tables which belong to selected database.
SHOW DATABASE;`})]})]})]})}function p1({mode:s}){return e.jsxs("div",{className:s==="alternative"?"altContainer":"container",children:[e.jsx("svg",{width:"343",height:"328",viewBox:"0 0 343 328",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:e.jsxs("g",{id:"Triadic Logo",children:[e.jsx("path",{id:"Triadic",d:"M165.755 157.055C165.653 150.021 165.653 150.019 159.131 149.964C156.005 149.937 152.66 150.669 152.913 145.454C153.08 141.995 154.145 140.785 157.603 140.859C165.926 141.037 174.255 140.909 182.582 140.914C190.112 140.918 190.737 141.795 188.594 149.711C187.225 149.791 185.757 149.929 184.286 149.953C176.895 150.071 176.896 150.06 176.889 157.702C176.882 165.03 176.675 172.364 176.933 179.683C177.107 184.636 173.888 183.727 170.958 183.876C167.788 184.037 165.532 183.844 165.715 179.528C166.026 172.214 165.771 164.877 165.755 157.055Z",fill:"#0092CB"}),e.jsxs("g",{id:"Left",className:s,children:[e.jsxs("g",{id:"Left 2",children:[e.jsx("path",{id:"Vector",d:"M98.9781 226.477C97.1791 226.098 95.38 225.72 93.4487 224.78C93.5986 223.262 94.0017 222.324 94.1453 221.347C97.094 201.285 100.075 181.227 102.82 161.137C103.04 159.531 101.586 157.697 100.91 155.969C103.137 150.824 105.364 145.68 107.59 140.535C107.91 140.614 108.229 140.693 108.549 140.772C107.112 160.549 105.676 180.327 103.846 200.73C101.961 209.729 100.47 218.103 98.9781 226.477Z",fill:"#02D7CC"}),e.jsx("path",{id:"Vector_2",d:"M88.8771 223.419C82.4073 220.395 81.09 214.665 82.6817 208.751C86.1145 195.999 90.333 183.458 94.5102 171.004C94.8318 174.975 95.3269 178.831 94.8334 182.557C93.026 196.201 90.8896 209.802 88.8771 223.419Z",fill:"#03EBCC"}),e.jsx("path",{id:"Vector_3",d:"M89.0931 223.66C90.8896 209.802 93.026 196.201 94.8334 182.557C95.3269 178.831 94.8318 174.975 94.7388 170.722C96.5934 165.66 98.4997 161.054 100.658 156.209C101.586 157.697 103.04 159.531 102.82 161.137C100.075 181.227 97.0941 201.285 94.1454 221.347C94.0018 222.324 93.5986 223.262 93.174 224.571C91.7909 224.582 90.55 224.241 89.0931 223.66Z",fill:"#02E4CE"}),e.jsx("path",{id:"Vector_4",d:"M99.3855 226.633C100.47 218.103 101.962 209.729 103.77 201.176C105.434 204.032 106.782 207.067 108.045 210.71C106.973 216.553 105.985 221.789 104.997 227.024C103.262 226.946 101.528 226.868 99.3855 226.633Z",fill:"#02CFCF"}),e.jsx("path",{id:"Vector_5",d:"M105.341 227.181C105.985 221.789 106.973 216.553 108.232 211.013C109.812 211.712 111.12 212.716 112.71 214.306C112.315 219.123 111.637 223.355 110.96 227.587C109.202 227.504 107.444 227.42 105.341 227.181Z",fill:"#02C7CE"}),e.jsx("path",{id:"Vector_6",d:"M111.401 227.693C111.637 223.355 112.315 219.123 112.989 214.46C115.543 215.062 118.099 216.096 120.813 217.757C120.622 221.4 120.273 224.417 119.923 227.434C117.229 227.556 114.536 227.678 111.401 227.693Z",fill:"#01B6CC"}),e.jsx("path",{id:"Vector_7",d:"M120.336 227.541C120.273 224.417 120.622 221.4 121.075 217.966C123.953 218.601 126.729 219.653 129.697 221.188C129.58 223.384 129.271 225.096 128.961 226.807C128.521 226.866 128.081 226.925 127.151 226.838C126.086 226.831 125.511 226.97 124.937 227.11C123.541 227.289 122.146 227.468 120.336 227.541Z",fill:"#019ECC"}),e.jsx("path",{id:"Vector_8",d:"M129.401 226.862C129.271 225.096 129.581 223.384 129.959 221.305C133.879 222.108 137.73 223.279 141.581 224.45C141.528 224.85 141.475 225.25 141.422 225.65C137.561 226.073 133.701 226.495 129.401 226.862Z",fill:"#0189BA"})]}),e.jsxs("g",{id:"Left 1",children:[e.jsx("path",{id:"Vector_9",d:"M86.7314 152.512C90.865 141.824 101.98 127.997 112.249 122.414C107.747 130.821 103.245 139.229 98.1234 147.882C95.7418 149.172 94.0648 150.423 92.1909 151.198C90.4821 151.904 88.5597 152.094 86.7314 152.512Z",fill:"#02DEC8"}),e.jsx("path",{id:"Vector_10",d:"M86.4876 152.77C88.5597 152.094 90.4821 151.904 92.191 151.198C94.0649 150.423 95.7418 149.172 97.8773 148.108C96.655 151.868 95.0599 155.649 92.8898 159.751C88.9243 161.728 85.5338 163.384 82.1432 165.04C83.5101 161.036 84.8769 157.032 86.4876 152.77Z",fill:"#02D0CB"}),e.jsx("path",{id:"Vector_11",d:"M81.9189 165.344C85.5338 163.384 88.9243 161.728 92.6747 160.034C91.6269 163.858 90.2192 167.722 88.2301 171.928C85.1263 173.181 82.6039 174.09 80.0814 175C80.6191 171.883 81.1568 168.766 81.9189 165.344Z",fill:"#02BCCC"}),e.jsx("path",{id:"Vector_12",d:"M79.9074 175.378C82.6038 174.09 85.1262 173.181 88.0156 172.211C87.3092 175.612 86.2358 179.074 84.6714 183.065C83.2206 185.924 83.543 189.42 79.3977 188.85C79.5096 184.486 79.6215 180.121 79.9074 175.378Z",fill:"#01A4C8"}),e.jsx("path",{id:"Vector_13",d:"M79.3031 189.283C83.543 189.42 83.2207 185.924 84.3952 183.347C83.6956 188.353 82.7811 193.607 81.8667 198.861C81.2883 198.832 80.71 198.802 80.1316 198.773C79.8239 195.754 79.5162 192.735 79.3031 189.283Z",fill:"#0176AB"})]}),e.jsxs("g",{id:"Left 3",children:[e.jsx("path",{id:"Vector_14",d:"M110.97 190.01C110.939 187.588 110.909 185.165 111.293 182.472C113.78 183.145 115.853 184.088 117.925 185.031C120.809 192.166 123.826 199.198 131.789 203.217C133.697 206.031 135.536 208.134 136.9 210.509C138.092 212.585 138.75 214.967 139.645 217.214C137.879 216.757 136.113 216.3 134.104 215.21C133.271 213.262 132.95 211.714 132.047 210.667C126.799 204.583 121.505 198.532 116.008 192.675C114.778 191.365 112.672 190.877 110.97 190.01Z",fill:"#02CACE"}),e.jsx("path",{id:"Vector_15",d:"M110.898 190.434C112.672 190.877 114.778 191.365 116.008 192.675C121.505 198.532 126.799 204.583 132.047 210.667C132.949 211.714 133.271 213.262 133.878 214.956C131.715 214.522 129.535 213.71 127.1 212.279C126.378 210.454 126.189 209.012 125.396 208.087C122.284 204.462 119.108 200.871 115.676 197.557C114.639 196.556 112.697 196.494 111.169 196.002C111.055 194.287 110.94 192.573 110.898 190.434Z",fill:"#02DFCF"}),e.jsx("path",{id:"Vector_16",d:"M111.12 196.378C112.697 196.494 114.639 196.556 115.676 197.557C119.108 200.871 122.284 204.462 125.396 208.087C126.189 209.012 126.378 210.454 126.855 212.043C118.982 209.841 112.913 205.426 111.12 196.378Z",fill:"#02E4CE"}),e.jsx("path",{id:"Vector_17",d:"M139.933 217.444C138.75 214.967 138.092 212.585 136.9 210.509C135.536 208.134 133.697 206.031 132.023 203.461C134.517 204.556 137.052 205.999 139.89 208.034C142.095 212.251 143.997 215.875 145.899 219.5C144.006 218.891 142.114 218.282 139.933 217.444Z",fill:"#02BCCC"}),e.jsx("path",{id:"Vector_18",d:"M146.191 219.701C143.997 215.875 142.095 212.251 140.104 208.287C143.211 209.671 146.407 211.394 149.93 213.683C151.158 216.566 152.059 218.882 152.961 221.198C150.802 220.766 148.643 220.334 146.191 219.701Z",fill:"#01B1CC"}),e.jsx("path",{id:"Vector_19",d:"M117.926 184.659C115.852 184.088 113.78 183.145 111.379 182.109C111.41 178.386 111.771 174.755 112.131 171.125C112.564 171.117 112.997 171.109 113.43 171.1C114.929 175.496 116.428 179.891 117.926 184.659Z",fill:"#01B1CC"}),e.jsx("path",{id:"Vector_20",d:"M153.25 221.419C152.059 218.882 151.158 216.566 150.207 213.873C153.572 215.555 156.986 217.614 160.706 220.239C160.995 221.624 160.978 222.444 160.96 223.264C158.486 222.723 156.013 222.182 153.25 221.419Z",fill:"#019ECC"}),e.jsx("path",{id:"Vector_21",d:"M161.245 223.47C160.978 222.444 160.995 221.624 161.004 220.393C163.547 221.084 166.097 222.185 168.647 223.286C168.441 223.919 168.234 224.552 168.027 225.184C165.861 224.682 163.696 224.179 161.245 223.47Z",fill:"#0189BA"})]})]}),e.jsxs("g",{id:"Top",className:s,children:[e.jsxs("g",{id:"Top 3",children:[e.jsx("path",{id:"Vector_22",d:"M197.626 105.141C196.222 104.203 194.817 103.265 193.076 101.809C192.072 100.894 191.405 100.498 190.738 100.102C189.294 99.1912 187.849 98.2805 186.057 96.8368C184.994 95.9204 184.279 95.537 183.565 95.1536C183.565 95.1536 183.215 95.0935 182.956 94.6745C181.965 93.8913 181.234 93.527 180.502 93.1628C180.502 93.1628 180.191 93.1496 180.065 92.6702C177.158 89.2716 174.534 86.1807 171.564 83.4691C165.505 77.9367 159.259 72.6085 153.089 67.1962C154.1 66.1476 155.111 65.0991 156.725 64.1449C170.986 75.0773 184.596 85.9782 198.359 96.6835C200.345 98.2285 203.063 98.833 205.442 99.8727C210.194 106.507 214.945 113.141 219.696 119.775C219.214 120.249 218.731 120.723 218.249 121.196C216.701 119.862 215.153 118.528 213.132 116.878C212.431 116.355 212.181 116.18 211.908 116.038C211.908 116.038 211.973 116.044 211.85 115.775C211.069 115.037 210.41 114.568 209.751 114.098C209.275 113.821 208.8 113.544 208.034 112.768C207.083 111.877 206.424 111.485 205.765 111.093C205.285 110.834 204.805 110.575 204.031 109.817C203.068 108.913 202.399 108.51 201.73 108.107C201.26 107.832 200.79 107.557 200.018 106.781C199.02 105.9 198.323 105.52 197.626 105.141Z",fill:"#02DFCF"}),e.jsx("path",{id:"Vector_23",d:"M205.319 99.5389C203.063 98.833 200.345 98.2285 198.359 96.6835C184.596 85.9782 170.986 75.0773 157.027 64.0552C162.478 59.58 166.622 58.7327 172.012 63.6609C181.542 72.3746 190.177 82.0735 199.077 91.4645C201.33 93.8423 203.167 96.6142 205.319 99.5389Z",fill:"#03EBCE"}),e.jsx("path",{id:"Vector_24",d:"M152.796 67.3301C159.259 72.6085 165.505 77.9367 171.564 83.4691C174.534 86.1807 177.158 89.2716 179.977 92.5414C174.272 90.3969 168.53 87.9017 162.382 84.9625C157.365 80.6881 152.753 76.8578 148.141 73.0274C149.595 71.1729 151.049 69.3184 152.796 67.3301Z",fill:"#02D0CB"}),e.jsx("path",{id:"Vector_25",d:"M147.884 73.1896C152.753 76.8578 157.365 80.6881 162.025 84.8898C160.616 85.8314 159.157 86.4015 157.118 86.7748C152.958 83.2044 149.378 79.8308 145.799 76.4571C146.408 75.422 147.018 74.3869 147.884 73.1896Z",fill:"#02C7CE"}),e.jsx("path",{id:"Vector_26",d:"M145.518 76.6646C149.379 79.8308 152.958 83.2044 156.78 86.8097C154.94 88.3685 152.859 89.6956 150.212 90.8815C147.043 88.0381 144.441 85.3358 141.838 82.6335C142.971 80.713 144.104 78.7925 145.518 76.6646Z",fill:"#02BCCC"}),e.jsx("path",{id:"Vector_27",d:"M141.587 82.8691C144.441 85.3358 147.043 88.0381 149.888 90.9943C147.705 93.2033 145.281 95.1584 142.303 96.997C139.495 95.2853 136.946 93.8696 137.807 90.3851C138.984 87.9583 140.16 85.5315 141.587 82.8691Z",fill:"#01A4C8"}),e.jsx("path",{id:"Vector_28",d:"M137.546 90.6394C136.946 93.8696 139.495 95.2853 141.989 97.1371C139.161 99.9799 136.093 102.566 132.209 105.84C131.774 99.2795 135.225 95.3195 137.546 90.6394Z",fill:"#0092CB"})]}),e.jsxs("g",{id:"Top Angle 2",children:[e.jsx("path",{id:"Vector_29",d:"M221.042 96.8633C228.884 108.011 233.796 120.276 234.568 134.279C230.033 126.8 225.497 119.322 221.029 111.196C221.079 105.988 221.06 101.426 221.042 96.8633Z",fill:"#02DEC8"}),e.jsx("path",{id:"Vector_30",d:"M220.959 96.5391C221.06 101.426 221.079 105.988 220.867 110.876C219.11 109.121 217.582 107.041 215.912 104.228C215.454 101.554 214.853 99.6052 214.893 97.6702C214.947 95.1199 215.506 92.5802 215.847 90.0359C217.523 92.0956 219.199 94.1552 220.959 96.5391Z",fill:"#02D0CB"}),e.jsx("path",{id:"Vector_31",d:"M215.733 89.7284C215.506 92.5802 214.947 95.1199 214.893 97.6702C214.853 99.6052 215.455 101.554 215.824 103.912C213.643 101.476 211.409 98.6247 209.073 95.011C208.652 90.2566 208.334 86.2647 208.015 82.2728C210.549 84.6555 213.083 87.0382 215.733 89.7284Z",fill:"#02C7CE"}),e.jsx("path",{id:"Vector_32",d:"M201.542 86.1941C199.114 83.6886 196.686 81.1831 194.249 78.0531C194.501 76.0438 194.762 74.659 195.022 73.2743C197.65 74.7852 200.278 76.2962 202.928 78.4476C202.48 81.4567 202.011 83.8254 201.542 86.1941Z",fill:"#01A4C8"}),e.jsx("path",{id:"Vector_33",d:"M201.693 86.5058C202.011 83.8254 202.48 81.4567 203.096 78.7187C204.636 79.5387 206.03 80.7279 207.719 82.095C208.334 86.2647 208.652 90.2566 208.957 94.6949C206.577 92.3667 204.21 89.592 201.693 86.5058Z",fill:"#01B6CC"}),e.jsx("path",{id:"Vector_34",d:"M194.683 73.1293C194.762 74.659 194.501 76.0438 194.104 77.7564C191.504 75.8337 189.039 73.5833 186.574 71.3328C186.905 70.8409 187.236 70.349 187.568 69.8571C189.826 70.8995 192.085 71.942 194.683 73.1293Z",fill:"#0092CB"})]}),e.jsxs("g",{id:"Top 1",children:[e.jsx("path",{id:"Vector_35",d:"M174.455 106.538C166.451 105.072 159.051 106.517 151.526 111.163C147.676 111.59 144.62 112.212 141.548 112.306C140.033 112.353 138.488 111.426 136.957 110.939C139.424 108.698 141.891 106.457 144.859 104.421C146.871 104.927 148.469 105.708 149.877 105.45C156.543 104.225 163.195 102.863 169.767 101.215C171.654 100.741 173.26 99.1458 174.994 98.0648C177.465 99.6288 179.935 101.193 182.658 103.291C180.091 104.729 177.273 105.634 174.455 106.538Z",fill:"#02C7CE"}),e.jsx("path",{id:"Vector_36",d:"M174.751 97.8116C173.26 99.1458 171.654 100.741 169.767 101.215C163.195 102.863 156.543 104.225 149.877 105.45C148.469 105.708 146.871 104.927 145.177 104.325C147.048 102.398 149.111 100.783 151.155 99.1449C158.574 93.2001 166.36 92.7321 174.751 97.8116Z",fill:"#02DECC"}),e.jsx("path",{id:"Vector_37",d:"M136.643 111.048C138.488 111.426 140.033 112.353 141.548 112.306C144.62 112.212 147.676 111.59 151.199 111.223C147.232 113.915 142.804 116.568 137.601 119.241C134.582 118.598 132.339 117.934 130.095 117.271C132.174 115.233 134.252 113.195 136.643 111.048Z",fill:"#01B1CC"}),e.jsx("path",{id:"Vector_38",d:"M174.75 106.746C177.273 105.634 180.091 104.729 182.968 103.434C186.665 105.421 190.302 107.8 193.94 110.179C193.737 110.626 193.534 111.072 193.33 111.519C187.235 109.997 181.14 108.475 174.75 106.746Z",fill:"#0189BA"}),e.jsx("path",{id:"Vector_39",d:"M129.802 117.406C132.339 117.934 134.582 118.598 137.282 119.331C133.107 122.211 128.477 125.021 123.312 127.744C122.426 126.963 122.075 126.27 121.724 125.578C124.319 122.899 126.913 120.22 129.802 117.406Z",fill:"#0196C3"}),e.jsx("path",{id:"Vector_40",d:"M121.416 125.727C122.075 126.27 122.426 126.963 123.032 127.951C120.756 129.672 118.225 131.098 115.694 132.523C115.563 132.382 115.432 132.241 115.301 132.1C117.237 130.025 119.173 127.951 121.416 125.727Z",fill:"#0176AB"})]})]}),e.jsxs("g",{id:"Right",className:s,children:[e.jsxs("g",{id:"Right Angle 2",children:[e.jsx("path",{id:"Vector_41",d:"M203.041 225.848C195.171 226.715 187.301 227.582 179.431 228.449C179.412 228.207 179.392 227.965 179.372 227.723C196.693 219.556 214.014 211.388 231.98 203.262C234.704 202.932 236.891 202.853 238.845 202.138C245.932 199.543 252.942 196.734 259.981 194.005C260.747 195.862 261.513 197.718 261.741 199.798C260.382 200.138 259.496 200.091 258.751 200.393C241.212 207.498 223.666 214.588 206.204 221.881C204.836 222.452 204.081 224.491 203.041 225.848Z",fill:"#02D9CD"}),e.jsx("path",{id:"Vector_42",d:"M261.91 204.004C262.718 209.052 260.435 212.748 255.901 214.137C244.864 217.518 233.656 220.337 221.672 223.273C220.22 223.095 219.612 223.028 219.143 222.652C220.878 221.227 222.334 219.762 224.094 219.047C236.665 213.947 249.297 209 261.91 204.004Z",fill:"#03F2D0"}),e.jsx("path",{id:"Vector_43",d:"M261.993 203.61C249.297 209 236.665 213.947 224.094 219.047C222.334 219.762 220.878 221.227 218.82 222.671C217.231 223.439 216.105 223.882 214.978 224.324C213.587 224.551 212.197 224.779 210.126 224.818C208.585 224.897 207.724 225.164 206.863 225.432C205.847 225.602 204.831 225.772 203.428 225.895C204.081 224.491 204.836 222.452 206.204 221.881C223.666 214.588 241.212 207.498 258.751 200.393C259.496 200.091 260.382 200.138 261.592 200.012C262.013 201.073 262.044 202.145 261.993 203.61Z",fill:"#03EAD2"}),e.jsx("path",{id:"Vector_44",d:"M260.038 193.632C252.942 196.734 245.932 199.543 238.845 202.138C236.891 202.853 234.704 202.932 232.325 203.187C234.952 200.583 237.878 198.094 241.112 195.12C241.624 194.395 241.803 194.137 241.956 193.86C241.956 193.86 241.95 193.935 242.286 193.865C248.028 192.214 253.434 190.633 258.84 189.051C259.259 190.454 259.678 191.856 260.038 193.632Z",fill:"#02CFCF"}),e.jsx("path",{id:"Vector_45",d:"M242.282 187.031C242.096 184.692 241.909 182.352 241.976 179.349C245.209 177.434 248.189 176.182 251.169 174.931C252.704 177.4 254.239 179.869 255.443 182.72C250.835 184.412 246.559 185.721 242.282 187.031Z",fill:"#01B1CC"}),e.jsx("path",{id:"Vector_46",d:"M242.196 187.455C246.559 185.721 250.835 184.412 255.484 183.062C256.84 184.802 257.825 186.583 258.825 188.708C253.434 190.633 248.028 192.214 242.248 193.862C241.953 191.911 242.031 189.896 242.196 187.455Z",fill:"#02C7CE"}),e.jsx("path",{id:"Vector_47",d:"M251.087 174.588C248.189 176.182 245.209 177.434 241.939 178.912C241.111 175.7 240.574 172.261 240.229 168.121C241.753 166.52 243.083 165.62 244.413 164.721C246.611 167.895 248.808 171.07 251.087 174.588Z",fill:"#019ECC"}),e.jsx("path",{id:"Vector_48",d:"M244.313 164.388C243.083 165.62 241.753 166.52 240.22 167.714C239.048 164.25 238.08 160.492 237.111 156.735C237.513 156.518 237.915 156.301 238.316 156.084C240.282 158.741 242.248 161.398 244.313 164.388Z",fill:"#0176AB"})]}),e.jsxs("g",{id:"Right Angle 3",children:[e.jsx("path",{id:"Vector_49",d:"M217.858 193.646C219.581 189.367 221.303 185.087 223.379 180.218C223.72 177.708 223.706 175.788 223.692 173.868C223.735 173.15 223.777 172.432 224.255 171.259C225.811 169.121 226.819 167.345 228.088 165.782C229.213 164.396 230.628 163.247 231.915 161.994C232.313 163.739 232.711 165.484 232.782 167.828C229.668 175.475 226.648 182.442 224.192 189.602C222.944 193.24 222.711 197.227 222.02 201.057C220.56 201.984 219.1 202.912 217.198 203.57C217.123 200.082 217.491 196.864 217.858 193.646Z",fill:"#02CACE"}),e.jsx("path",{id:"Vector_50",d:"M223.868 164.038C223.868 153.008 223.868 141.977 223.868 129.415C226.104 137.579 227.974 144.407 229.454 151.665C227.699 153.837 225.929 155.405 225.081 157.371C224.208 159.392 224.235 161.8 223.868 164.038Z",fill:"#0189BA"}),e.jsx("path",{id:"Vector_51",d:"M222.35 200.987C222.711 197.227 222.944 193.24 224.192 189.602C226.648 182.442 229.668 175.475 232.726 168.212C233.427 170.421 233.857 172.844 233.904 175.71C233.081 176.367 232.367 176.48 232.244 176.812C230.024 182.791 227.821 188.779 225.82 194.832C225.669 195.289 227.07 196.258 227.749 196.989C226.059 198.298 224.369 199.608 222.35 200.987Z",fill:"#02D7CC"}),e.jsx("path",{id:"Vector_52",d:"M227.978 196.719C227.07 196.258 225.669 195.289 225.82 194.832C227.821 188.779 230.024 182.791 232.244 176.812C232.367 176.48 233.081 176.367 233.824 176.078C236.295 185.997 234.393 192.567 227.978 196.719Z",fill:"#02E4CE"}),e.jsx("path",{id:"Vector_53",d:"M223.809 164.473C224.235 161.8 224.208 159.392 225.081 157.371C225.929 155.405 227.699 153.837 229.432 152.063C230.533 155.092 231.266 158.151 231.957 161.602C230.628 163.247 229.213 164.396 228.088 165.782C226.819 167.345 225.811 169.121 224.358 170.915C223.934 168.986 223.841 166.946 223.809 164.473Z",fill:"#01B6CC"}),e.jsx("path",{id:"Vector_54",d:"M217.576 193.834C217.491 196.864 217.123 200.082 216.867 203.626C214.899 204.939 212.82 205.927 210.369 206.508C210.025 204.787 210.052 203.473 210.079 202.159C212.484 199.447 214.889 196.735 217.576 193.834Z",fill:"#01B6CC"}),e.jsx("path",{id:"Vector_55",d:"M209.784 202.306C210.052 203.473 210.025 204.787 210.012 206.495C208.042 207.759 206.056 208.63 204.071 209.5C203.798 209.074 203.524 208.648 203.25 208.223C205.33 206.299 207.41 204.376 209.784 202.306Z",fill:"#0196C3"})]}),e.jsxs("g",{id:"Right Angle 1",children:[e.jsx("path",{id:"Vector_56",d:"M164.961 233.228C171.993 233.136 179.026 233.043 186.674 233.32C189.124 234.711 191.034 235.621 192.771 236.787C194.595 238.012 196.253 239.484 197.983 240.847C186.427 241.563 175.367 239.343 164.458 234.809C164.51 234.018 164.736 233.623 164.961 233.228Z",fill:"#03EBCE"}),e.jsx("path",{id:"Vector_57",d:"M216.057 238.111C213.304 238.754 210.55 239.397 207.285 239.663C204.965 238.061 203.127 236.876 201.358 235.597C199.861 234.515 198.443 233.324 196.99 232.18C200.044 231.79 203.098 231.399 206.692 231.365C208.552 232.58 209.913 233.384 211.183 234.312C212.845 235.527 214.435 236.84 216.057 238.111Z",fill:"#02CFCF"}),e.jsx("path",{id:"Vector_58",d:"M196.574 232.128C198.443 233.324 199.861 234.515 201.358 235.597C203.127 236.876 204.965 238.061 206.882 239.612C204.274 240.289 201.557 240.64 198.411 240.919C196.253 239.484 194.595 238.012 192.771 236.787C191.034 235.621 189.124 234.711 187.138 233.384C190.044 232.744 193.102 232.409 196.574 232.128Z",fill:"#02D9CD"}),e.jsx("path",{id:"Vector_59",d:"M216.434 238.125C214.435 236.84 212.845 235.527 211.183 234.312C209.913 233.384 208.552 232.58 207.11 231.398C210.008 230.578 213.029 230.081 216.601 229.923C219.092 232.139 221.032 234.018 222.972 235.896C220.918 236.643 218.864 237.391 216.434 238.125Z",fill:"#02BCCC"}),e.jsx("path",{id:"Vector_60",d:"M223.328 235.884C221.032 234.018 219.092 232.139 217.022 229.923C219.924 228.845 222.957 228.107 226.556 227.663C228.078 229.562 229.032 231.166 229.986 232.77C227.886 233.805 225.785 234.839 223.328 235.884Z",fill:"#01B1CC"}),e.jsx("path",{id:"Vector_61",d:"M230.321 232.714C229.032 231.166 228.078 229.562 226.962 227.63C230.052 226.749 233.304 226.196 236.555 225.643C236.849 226.215 237.143 226.786 237.436 227.358C235.176 229.125 232.915 230.892 230.321 232.714Z",fill:"#019ECC"}),e.jsx("path",{id:"Vector_62",d:"M164.678 233.132C164.736 233.623 164.51 234.018 164.158 234.602C163.205 234.471 162.379 234.151 160.154 233.289C162.577 233.145 163.486 233.091 164.678 233.132Z",fill:"#02D9CD"})]})]})]})}),s==="linear"?e.jsxs("h1",{className:"productName",children:[e.jsx("span",{children:"TRIADIC"}),e.jsx("span",{children:"ENGINE"})]}):null]})}const w=(s,r,n)=>{let C=s.slice();for(let i=0;i<3;i++)C[i]=Math.round(C[i]+n*(r[i]-C[i]));return C},E=s=>{let r=parseInt(s.slice(1),16);return[r>>16&255,r>>8&255,r&255]},T=s=>"#"+s.map(r=>{const n=r.toString(16);return n.length===1?"0"+n:n}).join("");function g1(){return e.jsxs("div",{className:"compContainer",children:[e.jsxs("div",{className:"compare",children:[e.jsxs("svg",{width:"50",height:"50",viewBox:"0 0 683 683",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[e.jsx("g",{id:"compare 1",clipPath:"url(#clip0_283_12)",children:e.jsxs("g",{id:"Group",children:[e.jsx("path",{id:"SmallCircle",d:"M48.1334 31.4667C14.4 40.5334 -6.5333 75.6001 2.00003 108.667C10.9334 142.8 45.8667 164 79.3334 155.333C113.467 146.4 134.667 111.467 126 78.2667C117.067 43.7334 81.6 22.4001 48.1334 31.4667ZM81.4667 54.5334C90.6667 58.9334 96.4 64.4001 101.467 73.6001C105.6 81.2001 106 82.9334 106 93.3334C106 103.867 105.6 105.333 101.2 113.333C80.6667 150.667 25.0667 138.8 21.6 96.4001C20.1334 77.2001 31.7334 59.7334 50.6667 52.8001C58.6667 49.8667 73.3334 50.8001 81.4667 54.5334Z",fill:"white"}),e.jsx("path",{id:"BigCircle",d:"M550 157.333C516.667 162.4 487.867 180.4 469.867 207.467C455.467 229.067 450.267 246.4 450.133 272.667C450 291.867 452.667 304.8 459.867 320.667C474.133 352.133 502.8 376.267 536.8 385.467C552 389.733 580.267 389.733 595.333 385.6C636 374.4 665.733 345.2 678.267 304.4C681.333 294 681.733 290.533 681.733 273.333C681.733 250.933 679.333 239.867 670.8 222.133C648.8 176.8 598.8 150 550 157.333ZM588.8 180.667C636.933 191.733 669.2 242.133 659.467 290.667C653.333 320.533 634.667 344.667 607.333 358C579.2 371.733 549.467 371.067 520.667 356.267C506.4 348.933 488.667 330.8 481.6 316C473.733 299.867 471.467 290.133 471.467 272.667C471.467 245.6 479.6 225.6 498.533 206.533C523.6 181.467 554.133 172.667 588.8 180.667Z",fill:"white"}),e.jsx("path",{id:"Lever",d:"M3.33334 163.333C-0.666663 167.2 -1.06666 173.2 2.4 177.067C5.33334 180.533 668.533 496 672.8 496C680.667 496 685.467 484.933 680.4 478.933C678.667 476.933 224.533 259.867 28.1333 167.2C19.7333 163.2 11.4667 160 9.73334 160C8 160 5.06667 161.467 3.33334 163.333Z",fill:"white"}),e.jsx("path",{id:"Base",d:"M334.933 352.933C330.4 356.8 168 639.333 168 643.333C168 645.2 169.467 648.267 171.333 650L174.533 653.333H341.333H508.133L511.333 650C513.2 648.267 514.667 645.2 514.667 643.333C514.667 639.333 352.267 356.8 347.733 352.933C346.267 351.733 343.333 350.667 341.333 350.667C339.333 350.667 336.4 351.733 334.933 352.933ZM413.867 508L484.933 631.333L413.2 631.733C373.6 631.867 309.067 631.867 269.467 631.733L197.733 631.333L269.067 507.6C308.267 439.6 340.933 384.133 341.6 384.267C342.267 384.533 374.8 440.133 413.867 508Z",fill:"white"})]})}),e.jsx("defs",{children:e.jsx("clipPath",{id:"clip0_283_12",children:e.jsx("rect",{width:"682.667",height:"682.667",fill:"white"})})})]}),e.jsx("h2",{children:"Normalization"})]}),e.jsxs("p",{className:"compContent",children:[e.jsx("strong",{children:"Normalization"}),"is a hectic and time consuming processes. Triadic SQL Engine provides",e.jsx("strong",{children:"partial automated normalization"}),", saving a lot of time and effort and also enhancing the data quality."]})]})}function L1(){return e.jsxs("div",{className:"ambContainer",children:[e.jsxs("div",{className:"amb",children:[e.jsxs("svg",{width:"50",height:"50",viewBox:"0 0 201 336",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[e.jsx("g",{id:"Questioning 1",clipPath:"url(#clip0_292_34)",children:e.jsxs("g",{id:"Group",children:[e.jsxs("g",{id:"Body",children:[e.jsx("path",{id:"Vector",d:"M171.796 159.002C173.097 159.002 174.154 157.964 174.154 156.689C174.154 155.414 173.097 154.377 171.796 154.377C170.496 154.377 169.438 155.414 169.438 156.689C169.438 157.964 170.496 159.002 171.796 159.002Z",fill:"white"}),e.jsx("path",{id:"Vector_2",d:"M56.7736 225.665C56.7736 226.399 56.882 227.108 57.0695 227.785V306.278C51.2418 310.773 47.4839 317.821 47.4839 325.751C47.4839 339.329 96.6555 339.329 96.6555 325.751C96.6555 317.821 92.8975 310.773 87.0695 306.277V233.665H112.135V306.277C106.307 310.773 102.549 317.821 102.549 325.751C102.549 339.329 151.721 339.329 151.721 325.751C151.721 317.821 147.963 310.773 142.135 306.278V227.783C142.322 227.107 142.43 226.399 142.43 225.665V152.678L162.407 163.066L165.679 195.686C157.963 198.708 151.905 205.378 150.184 213.952C147.961 225.024 153.654 235.852 163.393 240.8L165.965 227.986C162.873 225.059 161.3 220.705 162.19 216.27C163.584 209.327 170.478 204.791 177.558 206.157C184.638 207.524 189.264 214.285 187.87 221.228C186.98 225.663 183.841 229.107 179.848 230.667L177.275 243.48C188.2 242.521 197.654 234.618 199.877 223.546C202.162 212.163 196.083 201.036 185.841 196.293L181.768 155.691C181.431 152.334 179.424 149.373 176.432 147.817L137.609 127.627L137.523 127.791C136.57 127.389 135.525 127.165 134.431 127.165H120.529C115.307 129.353 109.432 131.12 103.459 132.378C83.69 136.541 62.5397 135.242 59.8487 122.954L58.4817 116.712L20.9338 100.979L20.4179 76.1519C20.9288 76.4497 21.4487 76.7377 21.9876 77.0035C32.2683 82.0741 44.4318 79.6007 51.9056 71.7277L40.0084 65.8598C36.3023 67.9958 31.6039 68.3143 27.4858 66.2831C21.0394 63.1037 18.4329 55.3736 21.6751 49.0519C24.9173 42.7302 32.7994 40.1739 39.2458 43.3534C43.3639 45.3845 45.9051 49.2734 46.3657 53.4642L58.2629 59.3322C60.2519 48.7545 55.0247 37.7035 44.744 32.6329C35.6364 28.1408 25.0521 29.571 17.5583 35.4278C17.5585 35.3947 17.5717 35.3648 17.5686 35.3311C17.5666 35.3091 17.3821 33.1202 18.7424 31.5459C19.636 30.5107 21.0315 29.9351 22.8899 29.8345C23.4417 29.8047 23.8645 29.3335 23.8352 28.7818C23.8049 28.23 23.3274 27.8111 22.7825 27.8375C20.3489 27.9688 18.4739 28.7838 17.2112 30.2589C15.2971 32.4947 15.5657 35.4049 15.5784 35.5279C15.6239 35.9812 15.9712 36.3152 16.3979 36.3928C14.131 38.3957 12.1947 40.8299 10.7432 43.66C10.3177 44.4897 9.94881 45.3327 9.62621 46.1839C7.07451 46.2797 4.64881 47.3373 2.85571 49.168C0.974811 51.0884 -0.0534885 53.6851 0.00221153 56.3731L1.07351 107.897C1.15551 111.85 3.55981 115.384 7.20731 116.912L56.7737 137.681L56.7736 225.665ZM171.796 151.377C174.788 151.377 177.214 153.755 177.214 156.689C177.214 159.623 174.788 162.002 171.796 162.002C168.804 162.002 166.379 159.623 166.379 156.689C166.379 153.755 168.804 151.377 171.796 151.377ZM11.0706 113.002C8.07871 113.002 5.65331 110.623 5.65331 107.689C5.65331 104.755 8.07871 102.377 11.0706 102.377C14.0625 102.377 16.4879 104.755 16.4879 107.689C16.4879 110.623 14.0625 113.002 11.0706 113.002ZM80.2273 151.165H118.977V181.165H80.2273V151.165Z",fill:"white"}),e.jsx("path",{id:"Vector_3",d:"M11.0706 105.377C9.77012 105.377 8.71252 106.414 8.71252 107.689C8.71252 108.964 9.77012 110.002 11.0706 110.002C12.3711 110.002 13.4288 108.964 13.4288 107.689C13.4288 106.414 12.3711 105.377 11.0706 105.377Z",fill:"white"})]}),e.jsxs("g",{id:"Head",children:[e.jsx("path",{id:"Vector_4",d:"M82.0647 110.438C83.0784 111.06 84.8108 110.638 85.9377 109.504C92.5471 102.757 102.166 99.3018 111.67 100.264C113.274 100.414 114.863 99.6597 115.213 98.5816C115.307 98.2989 115.104 97.942 115.012 97.8013C114.602 97.1695 113.627 96.44 112.121 96.2876C110.92 96.165 109.716 96.1045 108.517 96.1045C98.9338 96.1045 89.5578 99.9605 82.8801 106.779C81.8625 107.816 81.5969 108.956 81.6867 109.677C81.7141 109.892 81.798 110.276 82.0647 110.438Z",fill:"white"}),e.jsx("path",{id:"Vector_5",d:"M55.848 90.3999L62.8395 122.324C67.1773 142.13 140.622 126.662 136.284 106.855L129.293 74.9313C125.172 56.1129 106.844 43.6988 87.7035 46.154L87.0593 43.2123L85.1995 34.7203C88.4865 32.7576 90.3162 28.9143 89.4625 25.0162C88.3834 20.089 83.4355 16.9525 78.4111 18.0107C73.3867 19.0689 70.1883 23.9211 71.2674 28.8483C72.1211 32.7464 75.3987 35.5141 79.2175 35.9801L81.0773 44.472L81.7215 47.4137C63.2401 52.8822 51.7266 71.5813 55.848 90.3999ZM76.8259 75.0676C81.6438 74.0529 86.3883 77.0605 87.4231 81.7852C88.4578 86.5099 85.3909 91.1627 80.573 92.1775C75.755 93.1922 71.0105 90.1846 69.9758 85.4599C68.9411 80.735 72.0079 76.0823 76.8259 75.0676ZM103.745 69.3981C108.562 68.3834 113.307 71.391 114.342 76.1157C115.377 80.8405 112.31 85.4933 107.492 86.508C102.674 87.5227 97.9292 84.5151 96.8945 79.7904C95.8598 75.0657 98.9267 70.4128 103.745 69.3981ZM112.627 91.313C115.398 91.5938 117.858 93.0015 119.206 95.0791C120.229 96.6548 120.505 98.498 119.965 100.137C118.882 103.47 115.194 105.622 111.19 105.241L111.172 105.24C103.181 104.425 95.0666 107.329 89.4973 113.015C87.7356 114.789 85.4221 115.728 83.1994 115.729C81.8742 115.729 80.5822 115.395 79.4582 114.705C77.9611 113.795 76.9621 112.186 76.7258 110.297C76.4211 107.862 77.3869 105.238 79.3098 103.278C87.8762 94.5313 100.337 90.0616 112.627 91.313ZM76.2524 27.7985C75.7654 25.5747 77.2141 23.3769 79.4817 22.8993C81.7493 22.4217 83.9906 23.8425 84.4775 26.0662C84.9644 28.2899 83.5157 30.4878 81.2481 30.9654C78.9807 31.4429 76.7394 30.0222 76.2524 27.7985Z",fill:"white"}),e.jsx("path",{id:"Vector_6",d:"M79.5025 87.2889C81.5637 86.8548 82.881 84.8568 82.4382 82.8351C81.9955 80.8133 79.9577 79.522 77.8965 79.9561C75.8353 80.3902 74.518 82.3881 74.9608 84.4099C75.4036 86.4317 77.4413 87.7229 79.5025 87.2889Z",fill:"white"}),e.jsx("path",{id:"Vector_7",d:"M106.421 81.6194C108.482 81.1853 109.8 79.1874 109.357 77.1656C108.914 75.1438 106.877 73.8525 104.815 74.2866C102.754 74.7207 101.437 76.7187 101.88 78.7404C102.322 80.7622 104.36 82.0535 106.421 81.6194Z",fill:"white"})]}),e.jsx("path",{id:"Robot-Bar-2",d:"M112.858 157.165H86.3457V161.165H112.858V157.165Z",fill:"white"}),e.jsx("path",{id:"Robot-Bar-1",d:"M112.858 165.165H86.3457V169.165H112.858V165.165Z",fill:"white"}),e.jsx("path",{id:"Robot-Button-2",d:"M88.3851 177.165C89.5114 177.165 90.4245 176.27 90.4245 175.165C90.4245 174.061 89.5114 173.165 88.3851 173.165C87.2588 173.165 86.3457 174.061 86.3457 175.165C86.3457 176.27 87.2588 177.165 88.3851 177.165Z",fill:"white"}),e.jsx("path",{id:"Robot-Button-1",d:"M94.5034 177.165C95.6297 177.165 96.5428 176.27 96.5428 175.165C96.5428 174.061 95.6297 173.165 94.5034 173.165C93.3771 173.165 92.464 174.061 92.464 175.165C92.464 176.27 93.3771 177.165 94.5034 177.165Z",fill:"white"}),e.jsxs("g",{id:"Exclamation",children:[e.jsx("path",{id:"Vector_8",d:"M149.325 4.42799C149.757 2.48349 149.055 0.823394 145.984 0.167794C142.979 -0.473906 141.622 0.810694 141.232 2.56889L139.659 9.65519L136.468 30.6526L141.777 31.786L147.78 11.3892L149.325 4.42799Z",fill:"white"}),e.jsx("path",{id:"Vector_9",d:"M138.161 34.4938C135.348 33.8932 132.954 35.6164 132.439 37.936C131.882 40.4469 133.085 42.8714 136.348 43.5682C139.353 44.2099 141.555 42.4456 142.098 39.9984C142.655 37.49 141.297 35.1634 138.161 34.4938Z",fill:"white"})]}),e.jsxs("g",{id:"Question",children:[e.jsx("path",{id:"Vector_10",d:"M158.689 38.8771C155.873 38.2759 153.51 39.8747 152.967 42.3193C152.41 44.8302 153.689 47.2042 156.825 47.8738C159.83 48.5155 162.045 46.6899 162.561 44.3678C163.131 41.7981 161.757 39.5322 158.689 38.8771Z",fill:"white"}),e.jsx("path",{id:"Vector_11",d:"M169.632 26.698C175.011 24.4949 177.562 21.7549 178.607 17.052C179.567 12.7242 177.704 6.94071 169.005 5.08321C164.592 4.14091 159.631 4.46081 156.744 5.09241L154.724 14.1869L161.584 16.1755L162.392 12.5392C162.587 11.6614 163.018 11.2271 163.621 11.2248C164.51 11.15 165.533 11.3684 166.62 11.6006C169.113 12.1329 170.449 13.6662 169.891 16.1772C169.167 19.4383 167.089 20.045 163.894 21.4635C159.445 23.4055 157.121 24.8149 156.464 30.1912L155.909 34.8034L162.625 36.2375L163.293 33.2264C164.184 29.2125 165.209 28.5119 169.632 26.698Z",fill:"white"})]}),e.jsx("path",{id:"Head-Small-Wave",d:"M72.8147 48.2471C73.3292 48.2471 73.7419 47.8532 73.796 47.3499C73.7992 47.3201 73.8141 47.2947 73.8147 47.2641C73.8557 44.915 73.1897 43.0439 71.8362 41.7021C69.7034 39.5878 66.6614 39.6416 66.5354 39.6479C65.9846 39.6621 65.552 40.1191 65.5637 40.6699C65.5764 41.2138 66.0227 41.6474 66.5657 41.6474C66.5716 41.6474 66.5784 41.6474 66.5843 41.6469C66.6097 41.6484 68.9232 41.6196 70.4398 43.1342C71.3832 44.0766 71.8461 45.4545 71.8148 47.2299C71.8079 47.6183 72.0306 47.9499 72.3517 48.1211C72.4868 48.1931 72.6339 48.2441 72.7972 48.247C72.8029 48.2471 72.8088 48.2471 72.8147 48.2471Z",fill:"white"}),e.jsx("path",{id:"Head-Big-Wave",d:"M77.2844 47.8316C77.3039 47.8326 77.3225 47.8331 77.342 47.8331C77.8684 47.8331 78.3098 47.422 78.3391 46.8897C78.3691 46.3613 78.3666 45.8537 78.3481 45.3564C78.2444 42.5652 77.3866 40.2638 75.7727 38.5103C72.8196 35.3023 68.4631 35.1519 68.2795 35.147C68.2707 35.1465 68.2619 35.1465 68.2522 35.1465C67.7122 35.1465 67.2678 35.5772 67.2532 36.1201C67.2386 36.6723 67.6751 37.1318 68.2268 37.146C68.2639 37.147 71.9143 37.2725 74.301 39.8648C75.7091 41.3954 76.3931 43.5095 76.3562 46.1424C76.3533 46.3527 76.3553 46.5594 76.343 46.7764C76.3117 47.3277 76.7326 47.8003 77.2844 47.8316Z",fill:"white"}),e.jsx("path",{id:"Hand-Wave",d:"M11.8732 35.0957C11.8878 35.0957 11.9025 35.0952 11.9171 35.0947C12.4679 35.0708 12.8956 34.6045 12.8732 34.0537C12.8722 34.0185 12.7589 30.5176 15.1086 28.0303C16.6867 26.3599 19.0412 25.4878 22.1057 25.438C22.6575 25.4287 23.0979 24.9741 23.0891 24.4219C23.0803 23.875 22.634 23.438 22.0891 23.438C22.0842 23.438 22.0784 23.438 22.0725 23.438C18.4377 23.4971 15.5998 24.5864 13.637 26.6763C10.7093 29.792 10.8675 33.9673 10.8753 34.1436C10.8996 34.6792 11.342 35.0957 11.8732 35.0957Z",fill:"white"})]})}),e.jsx("defs",{children:e.jsx("clipPath",{id:"clip0_292_34",children:e.jsx("rect",{width:"200.356",height:"335.935",fill:"white"})})})]}),e.jsx("h2",{children:"Enhanced Security"})]}),e.jsxs("p",{className:"ambContent",children:["It provide advanced security features, ensuring data ",e.jsx("strong",{children:"integrity"})," and confidentiality. The unique true, false, or limit status for each cell enhances access control granularity, preventing unauthorized access and tampering. Role-based access control and cryptographic techniques further protect sensitive information, bolstering overall system security."]})]})}function f1(){return e.jsxs("div",{className:"memContainer",children:[e.jsxs("div",{className:"mem",children:[e.jsx("svg",{width:"50",height:"50",viewBox:"0 0 683 683",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:e.jsxs("g",{id:"system-integration_9292577 1",children:[e.jsxs("g",{id:"Group",children:[e.jsx("path",{id:"Vector",d:"M209.333 15.8667C188.667 22.6667 178.133 44.2667 185.733 64.2667C188.4 71.2 197.6 80.4 204.8 83.4667L209.467 85.4667L209.067 96.4L208.667 107.333L163.867 107.733C120.267 108 118.933 108.133 116.533 110.8C114.133 113.467 114 116.667 113.6 156.8L113.2 200H101.6C90 200 89.7333 199.867 85.8666 195.6C76.5333 185.467 76.8 186.133 79.2 179.2C89.3333 149.6 62.5333 122.667 33.0666 132.8C20.5333 137.067 10.6666 151.333 10.6666 165.467C10.6666 190.533 32.6666 207.867 56.5333 201.2L61.7333 199.733L71.8666 209.867L82 220H120.4H158.667V274.667V329.333H136.8H114.933L112 323.333C106.667 312.4 93.2 304 80.6666 304C73.0666 304 63.2 307.867 57.0666 313.333C48.6666 320.667 44.9333 329.067 44.9333 340C44.8 361.067 59.4666 376 80 375.867C95.2 375.867 105.067 370.267 111.467 358L115.333 350.667H137.067H158.667V405.333V460H123.467C102.933 460 86.5333 460.533 84.4 461.333C82.4 462.133 76.4 467.333 71.2 472.933C61.8666 483.067 61.7333 483.067 57.3333 481.6C40.1333 475.467 18.5333 486.4 12.6666 503.867C9.73329 512.8 10.5333 525.2 14.4 532.667C17.6 538.933 24.1333 545.333 30.6666 548.8C37.2 552.267 56.1333 552.267 62.6666 548.8C79.2 540.133 86.6666 521.067 80.1333 504L77.6 497.467L83.8666 490.133L90 482.8H101.6L113.2 482.667L113.6 525.867C114 566 114.133 569.2 116.533 571.867C118.933 574.533 120.267 574.667 163.867 574.933L208.667 575.333L209.067 586.267L209.467 597.2L202.933 600.533C195.6 604.267 188.667 611.467 185.6 618.533C183.067 624.533 182.933 637.733 185.2 644.533C187.467 651.067 196.133 660.667 203.333 664.4C210.933 668.533 227.733 668.533 235.467 664.4C242 660.933 250.133 652.133 252.933 645.467C255.867 638.533 255.6 624.667 252.4 617.333C249.467 610.533 240.933 602.4 234 599.467L229.333 597.467V578.8C229.333 561.733 229.067 559.733 226.667 557.333C224.133 554.8 222.267 554.667 179.333 554.667H134.667V518.667V482.667H146.533H158.4L158.933 496.8C159.333 510.4 159.467 511.067 163.067 514.133L166.8 517.333H248.8H330.667V547.733V578.267L325.333 580.667C312.667 586.4 304.533 600.667 305.6 615.067C307.2 634.667 321.6 648 341.333 648C355.467 648 367.2 640.933 373.733 628.667C377.733 621.333 377.867 604.4 374 596.667C370.667 589.867 362.4 581.867 356.533 580L352 578.4V547.867V517.333H433.333C491.2 517.333 515.467 516.933 517.867 515.867C522.4 513.733 524 508.267 524 494.533V482.667H536H548V519.333V556H503.333C460.4 556 458.533 556.133 456 558.667C453.6 561.067 453.333 563.067 453.333 579.867V598.4L447.467 601.333C440.533 604.667 432.667 612.933 429.6 619.867C424.267 632.4 428.8 650.4 439.733 660C449.467 668.533 461.467 671.2 474.133 667.333C504.267 658.4 508.667 616.267 481.067 602.133L473.333 598.267V587.067V576H517.867C559.733 576 562.533 575.867 565.467 573.467L568.667 570.933L569.067 526.8L569.467 482.667H580.933H592.4L597.2 488.267C605.733 498.267 605.6 497.867 603.2 505.333C600.133 514.8 601.2 527.333 605.867 535.2C620 559.2 655.333 559.067 668.533 534.8C678 517.2 672.267 495.867 655.2 485.867C648.133 481.733 633.6 480 626.533 482.533C622.133 484 622 484 611.333 473.333L600.667 462.667H562.267H524V408V353.333H543.2H562.4L566.533 360.667C577.6 380.267 604.133 384.4 620.667 369.2C629.2 361.333 632.667 353.467 632.533 342C632.267 326.933 625.467 315.733 612.667 309.867C594.8 301.467 572.533 309.333 564.667 326.533L562.267 332H543.067H524V277.333V222.667H562.267H600.533L610.533 212L620.667 201.2L628.4 202.8C646.8 206.533 664.8 196.133 670.667 178.267C672.8 171.467 671.867 158 668.667 151.467C662.667 138.933 651.333 132 636.667 132C620.533 132 607.867 140.4 602.667 154.267C599.333 163.067 599.333 170.533 602.4 179.6L604.8 186.4L598.267 193.867L591.733 201.333H580.667H569.467L569.067 158C568.667 115.067 568.667 114.667 565.6 111.733C562.667 108.667 562.4 108.667 518 108.267L473.333 107.867V96.6667V85.3334L479.733 82.1334C487.067 78.4 494 71.2 497.067 64.1334C499.6 58.1334 499.733 44.9334 497.467 38.1334C495.2 31.6 486.533 22 479.333 18.2667C471.733 14.1334 454.933 14.1334 447.2 18.2667C440.667 21.7334 432.533 30.5334 429.733 37.2C426.667 44.2667 426.933 58 430.267 65.3334C433.333 72.1334 441.733 80.4 448.667 83.2L453.333 85.2V103.867C453.333 120.933 453.6 122.933 456 125.333C458.533 127.867 460.4 128 503.333 128H548V164V200H536H524V188.133C524 174.4 522.4 168.933 517.867 166.8C515.467 165.733 491.2 165.333 433.333 165.333H352V137.467V109.6L356.267 107.867C362.4 105.333 370.267 97.8667 373.733 91.4667C377.867 83.7334 377.867 66.9334 373.733 59.2C369.867 52 360.267 43.6 353.6 41.6C346.933 39.6 335.733 39.6 329.067 41.6C322.4 43.6 312.8 52 308.933 59.2C305.067 66.5334 304.8 83.6 308.4 90.8C311.733 97.4667 318.933 104.4 325.333 107.333L330.667 109.733V137.6V165.333H249.333C191.467 165.333 167.2 165.733 164.8 166.8C160.267 168.933 158.667 174.4 158.667 188.133V200H146.667H134.667V163.333V126.667H179.333C222.267 126.667 224.133 126.533 226.667 124C229.067 121.6 229.333 119.6 229.333 103.333V85.3334L235.067 82.5334C248 76 255.067 64.8 255.067 50.6667C255.067 45.8667 254.133 39.8667 252.933 37.2C250.133 30.5334 242 21.7334 235.467 18.4C229.6 15.3334 215.067 14 209.333 15.8667ZM228.4 37.6C231.733 39.3334 236 46.6667 236 50.6667C236 55.7334 231.067 62.6667 225.867 64.8C210.933 71.0667 198.533 53.0667 209.333 40.8C214.667 34.8 220.933 33.7334 228.4 37.6ZM468.533 36.5334C478.533 40.6667 481.867 52 475.333 59.8667C470.533 65.4667 464.133 67.3334 458.4 64.9334C451.333 61.8667 448.667 58 448.667 50.6667C448.667 43.4667 451.333 39.4667 458 36.5334C463.067 34.2667 463.2 34.2667 468.533 36.5334ZM352.8 65.8667C356.667 69.7334 357.333 71.3334 357.333 76.6667C357.333 87.4667 347.6 94.2667 337.6 90.4C332.4 88.4 326.667 81.4667 326.667 77.0667C326.667 72.6667 330.4 66.1334 334.4 63.7334C336.4 62.4 340.267 61.3334 343.2 61.3334C347.2 61.3334 349.2 62.2667 352.8 65.8667ZM52.4 152.533C62.5333 156.667 64.8 168.8 56.8 176.8C53.0666 180.533 51.2 181.333 46.6666 181.333C39.3333 181.333 33.8666 177.333 31.8666 170.667C29.8666 163.867 33.3333 156.4 40 153.067C45.6 150.133 46.8 150.133 52.4 152.533ZM643.733 154.667C648.933 157.867 652.533 165.333 651.333 170.8C650 176.8 642.267 182.667 635.867 182.667C628.4 182.667 621.333 175.867 621.333 168.8C621.333 155.467 633.067 148.133 643.733 154.667ZM502.667 341.333V496H341.333H180V341.333V186.667H341.333H502.667V341.333ZM89.3333 329.2C99.0666 336.133 97.0666 350.8 85.7333 355.467C80.1333 357.867 74 356.267 69.2 351.2C64.9333 346.667 64.6666 336.4 68.6666 332C74.6666 325.333 82.5333 324.267 89.3333 329.2ZM601.867 327.2C615.733 332.933 615.067 351.2 600.8 356C592.133 358.8 581.333 350.667 581.333 341.333C581.333 336.4 586.133 329.467 591.067 327.333C596.4 324.933 596.533 324.933 601.867 327.2ZM56.8 504.533C60.2666 508 61.3333 510.133 61.3333 513.867C61.3333 523.2 54.6666 530.667 46.2666 530.667C41.0666 530.667 34.1333 525.2 32.1333 519.2C30.5333 514.533 30.5333 513.333 32.5333 509.2C35.2 503.467 40.5333 500.133 47.2 500C51.2 500 53.2 500.933 56.8 504.533ZM645.467 504.133C647.6 505.6 649.867 508.933 650.8 512C654.133 523.067 643.067 534.133 632 530.8C619.333 527.067 617.067 509.333 628.267 503.067C632.933 500.533 641.067 500.933 645.467 504.133ZM350 600.267C358.667 607.067 358.533 618.933 349.467 624.933C343.867 628.667 339.333 628.8 333.6 625.333C325.867 620.667 323.733 610.8 328.8 603.333C333.333 596.933 343.733 595.333 350 600.267ZM228.667 620.533C235.333 624.933 236.267 636.8 230.267 642.4C222.933 649.333 213.867 648.8 207.333 641.2C200.933 633.467 204.133 622.133 213.733 618C218.133 616.133 223.333 617.067 228.667 620.533ZM467.6 618C472.667 619.467 477.333 626.267 477.333 632.133C477.333 639.867 470.533 647.067 463.2 647.067C456.4 647.067 452.533 644.933 449.333 639.6C446 634.133 446 629.733 449.333 624.267C452.133 619.733 459.067 615.733 462.667 616.667C463.733 616.933 466 617.467 467.6 618Z",fill:"white"}),e.jsx("path",{id:"Gear",d:"M319.2 210.267C314.4 211.2 312 215.2 310.133 225.333C309.067 230.533 307.733 235.333 307.067 235.867C306.533 236.4 302.267 238.533 297.6 240.4L289.2 244L281.067 238C268.4 228.8 267.733 228.933 248.4 248.4C228.933 267.867 228.8 268.4 238 281.067L244 289.333L239.867 298.667C236.933 305.2 234.8 308.267 232.8 308.667C231.2 308.933 226.667 309.867 222.533 310.667C210.8 312.933 210.133 314.267 209.467 335.6C209.067 355.067 209.867 363.733 212.533 367.333C213.6 368.8 217.867 370.267 224.667 371.467C230.4 372.4 235.2 373.467 235.333 373.6C235.6 373.867 237.6 378.133 239.867 383.067L244 392.267L238 400.667C229.067 413.2 229.2 413.6 248.267 432.933C267.6 452.4 268.133 452.533 281.2 443.467L289.733 437.6L298.533 441.733C303.333 444 307.6 445.867 307.867 446.133C308 446.4 309.067 450.933 310.133 456.267C312.933 471.467 313.867 472 340 472C352.933 472 362.533 471.467 364.533 470.533C368.4 468.8 370 465.067 372 454.133C372.667 449.733 373.467 446.133 373.6 446C373.867 445.867 378.133 443.867 383.067 441.6L392.133 437.467L400.4 443.333C413.333 452.933 414.533 452.533 433.6 433.6C452.533 414.533 452.933 413.333 443.333 400.4L437.467 392.267L441.733 382.933L446 373.6L454 372C465.2 370 468.8 368.267 470.533 364.533C471.467 362.533 472 352.933 472 340C472 313.867 471.467 312.933 456.267 310.133C450.933 309.067 446.4 308 446.133 307.867C445.867 307.6 444 303.333 441.733 298.533L437.6 289.733L443.467 281.2C452.533 268.267 452.267 267.733 432.933 248.4C413.6 229.067 413.2 228.933 400.667 238L392.267 244L383.067 239.867C378.133 237.6 373.867 235.6 373.733 235.467C373.467 235.333 372.533 230.8 371.467 225.467C368.667 210.267 368.267 210 342.933 209.733C331.467 209.733 320.667 209.867 319.2 210.267ZM354.667 238.8C355.733 243.733 357.467 248.533 358.4 249.733C359.333 250.8 364.667 253.333 370.4 255.333C376 257.333 383.467 260.4 386.933 262.133C390.4 263.867 394.533 265.333 396 265.333C397.6 265.333 402.4 262.8 406.933 259.867L414.933 254.4L422.133 261.467L429.333 268.667L424 276.667C421.067 281.067 418.667 286 418.667 287.733C418.667 289.333 420.4 294.267 422.533 298.4C424.667 302.667 427.467 309.733 428.667 314.133C429.867 318.4 432 323.067 433.333 324.4C434.533 325.733 439.733 327.867 444.8 329.067L454 331.333V341.333V351.333L444.933 353.6C434.533 356 431.2 358.533 429.867 364.533C429.333 366.8 426.667 374 423.867 380.533C420.933 387.067 418.667 393.733 418.667 395.2C418.667 396.8 421.067 401.6 424 406L429.333 414L422.133 421.2L414.933 428.267L406.933 422.8C402.4 419.867 397.6 417.333 396 417.333C394.533 417.333 389.867 419.067 385.6 421.2C381.467 423.2 374 426.267 369.2 427.867C364.267 429.467 359.467 431.867 358.267 433.067C357.2 434.267 355.2 439.067 354 443.6L351.6 452H341.333H331.067L329.467 443.6C327.2 432.267 325.333 429.867 316.8 427.467C312.8 426.267 305.067 423.2 299.733 420.667C294.4 418.133 289.067 416 287.867 416C286.667 416 282 418.4 277.333 421.467L268.933 426.933L261.867 419.733L254.667 412.667L260 404.667C262.933 400.267 265.333 395.333 265.333 393.867C265.333 392.267 263.6 387.6 261.333 383.467C259.2 379.2 256.133 371.733 254.667 366.8C253.2 361.733 251.067 356.933 250.133 356.133C249.067 355.2 244.267 353.867 239.467 353.067L230.667 351.6V341.333V331.067L239.067 329.467C250.4 327.2 252.8 325.333 255.2 316.8C256.4 312.8 259.467 305.067 262 299.733C264.533 294.4 266.667 289.067 266.667 287.867C266.667 286.667 264.267 282 261.2 277.333L255.733 268.933L262.933 261.867L270 254.667L278 260C287.333 266.133 290.133 266.533 297.733 262.133C300.8 260.267 308.133 257.333 313.867 255.467C319.733 253.467 325.2 251.333 326.133 250.533C327.067 249.733 328.8 244.667 330.133 239.2L332.267 229.2L342.4 229.6L352.667 230L354.667 238.8Z",fill:"white"}),e.jsx("path",{id:"Vector_2",d:"M320 277.733C299.067 284.933 282.933 301.6 276.8 322.533C273.733 332.8 274 350.933 277.333 361.467C283.867 382.4 301.333 399.6 322.533 405.867C332.933 408.933 350.933 408.667 361.733 405.333C382.4 398.933 399.6 381.333 405.867 360.133C407.067 355.867 408 348 408 341.333C408 317.733 397.733 298.267 378.533 285.467C362.133 274.533 338.533 271.333 320 277.733ZM362.133 300C371.867 304.8 378.933 312.133 383.733 322.533C386.667 328.667 387.333 332 387.333 341.333C387.333 351.467 386.933 353.6 382.933 361.6C377.867 371.867 370.667 378.933 360.133 383.733C349.467 388.8 333.2 388.8 322.667 383.867C311.867 378.667 304.8 371.867 299.733 361.6C295.733 353.6 295.333 351.467 295.333 341.333C295.333 331.2 295.733 329.067 299.733 321.067C305.867 308.533 317.067 299.333 330.267 296C339.333 293.733 352.933 295.467 362.133 300Z",fill:"white"})]}),e.jsxs("g",{id:"Slow",children:[e.jsx("circle",{id:"Ellipse 1",cx:"220",cy:"50",r:"16",fill:"white"}),e.jsx("circle",{id:"Ellipse 11",cx:"464",cy:"50",r:"16",fill:"white"}),e.jsx("circle",{id:"Ellipse 5",cx:"220",cy:"632",r:"16",fill:"white"}),e.jsx("circle",{id:"Ellipse 12",cx:"462",cy:"632",r:"16",fill:"white"})]}),e.jsxs("g",{id:"Medium",children:[e.jsx("circle",{id:"Ellipse 2",cx:"47",cy:"166",r:"16",fill:"white"}),e.jsx("circle",{id:"Ellipse 6",cx:"636",cy:"167",r:"16",fill:"white"}),e.jsx("circle",{id:"Ellipse 7",cx:"47",cy:"515",r:"16",fill:"white"}),e.jsx("circle",{id:"Ellipse 8",cx:"636",cy:"516",r:"16",fill:"white"})]}),e.jsxs("g",{id:"Fast",children:[e.jsx("circle",{id:"Ellipse 9",cx:"342",cy:"76",r:"16",fill:"white"}),e.jsx("circle",{id:"Ellipse 10",cx:"341",cy:"612",r:"16",fill:"white"}),e.jsx("circle",{id:"Ellipse 3",cx:"81",cy:"341",r:"16",fill:"white"}),e.jsx("circle",{id:"Ellipse 4",cx:"596",cy:"341",r:"16",fill:"white"})]})]})}),e.jsx("h2",{children:"Web-Based Edition"})]}),e.jsx("p",{className:"memContent",children:"Our web-based interface simplifies database management, offering real-time collaboration and secure access from any location. It ensures efficient data input, modification, and retrieval, integrating seamlessly with other web services for enhanced usability and productivity."})]})}function b1(){return e.jsxs("div",{className:"miContainer",children:[e.jsxs("div",{className:"mi",children:[e.jsxs("svg",{width:"50",height:"50",viewBox:"0 0 32 32",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[e.jsxs("g",{clipPath:"url(#clip0_380_10)",children:[e.jsx("path",{d:"M22 26H20V17.76L16.77 21.64C16.6762 21.7532 16.5585 21.8444 16.4254 21.907C16.2923 21.9695 16.1471 22.002 16 22.002C15.8529 22.002 15.7077 21.9695 15.5746 21.907C15.4415 21.8444 15.3238 21.7532 15.23 21.64L12 17.76V26H10V15C10.0001 14.7945 10.0635 14.594 10.1816 14.4258C10.2997 14.2576 10.4667 14.1299 10.66 14.06C10.8534 13.9897 11.0638 13.9808 11.2624 14.0345C11.4611 14.0882 11.6383 14.2019 11.77 14.36L16 19.44L20.23 14.36C20.3617 14.2019 20.5389 14.0882 20.7376 14.0345C20.9362 13.9808 21.1466 13.9897 21.34 14.06C21.5333 14.1299 21.7003 14.2576 21.8184 14.4258C21.9365 14.594 21.9999 14.7945 22 15V26Z",fill:"white"}),e.jsx("path",{d:"M4.16001 14.65L1.16001 12.9C1.07334 12.8501 0.977685 12.8178 0.878513 12.8049C0.779341 12.7919 0.678593 12.7986 0.58202 12.8246C0.485447 12.8506 0.394941 12.8954 0.315669 12.9564C0.236397 13.0174 0.169912 13.0934 0.12001 13.18C0.0701076 13.2667 0.0377654 13.3624 0.0248298 13.4615C0.0118941 13.5607 0.0186185 13.6615 0.0446189 13.758C0.0706193 13.8546 0.115387 13.9451 0.176365 14.0244C0.237343 14.1037 0.313338 14.1701 0.40001 14.22L3.40001 16C3.48623 16.0604 3.58405 16.1022 3.68727 16.1228C3.79048 16.1434 3.89685 16.1423 3.99963 16.1196C4.10241 16.0969 4.19936 16.0532 4.28434 15.9911C4.36931 15.929 4.44046 15.8499 4.49328 15.7588C4.5461 15.6678 4.57943 15.5668 4.59116 15.4622C4.6029 15.3576 4.59278 15.2517 4.56145 15.1512C4.53011 15.0507 4.47825 14.9579 4.40915 14.8785C4.34005 14.7991 4.25521 14.7349 4.16001 14.69V14.65Z",fill:"white"}),e.jsx("path",{d:"M8.29003 10.52C8.33773 10.6037 8.4015 10.677 8.47766 10.7359C8.55383 10.7948 8.6409 10.838 8.73384 10.8631C8.82679 10.8882 8.92378 10.8947 9.01924 10.8821C9.11469 10.8696 9.20672 10.8383 9.29003 10.79C9.4567 10.6917 9.57891 10.5327 9.63109 10.3463C9.68327 10.16 9.66139 9.96063 9.57003 9.79002L7.83003 6.79002C7.78012 6.70335 7.71364 6.62736 7.63437 6.56638C7.5551 6.5054 7.46459 6.46063 7.36802 6.43463C7.27144 6.40863 7.1707 6.40191 7.07152 6.41484C6.97235 6.42778 6.8767 6.46012 6.79003 6.51002C6.61498 6.61081 6.48715 6.777 6.43464 6.97203C6.38213 7.16707 6.40924 7.37498 6.51003 7.55002L8.29003 10.52Z",fill:"white"}),e.jsx("path",{d:"M16 9C16.2016 9 16.3949 8.91993 16.5374 8.7774C16.6799 8.63487 16.76 8.44156 16.76 8.24V4.76C16.76 4.55844 16.6799 4.36513 16.5374 4.2226C16.3949 4.08007 16.2016 4 16 4C15.7984 4 15.6051 4.08007 15.4626 4.2226C15.3201 4.36513 15.24 4.55844 15.24 4.76V8.25C15.2426 8.44983 15.3239 8.64058 15.4661 8.78095C15.6083 8.92132 15.8001 9.00002 16 9Z",fill:"white"}),e.jsx("path",{d:"M22.68 10.79C22.7916 10.8583 22.9191 10.8962 23.05 10.9C23.1837 10.9003 23.3151 10.8654 23.431 10.7986C23.5469 10.7319 23.6431 10.6358 23.71 10.52L25.46 7.52C25.5607 7.34495 25.5879 7.13704 25.5354 6.94201C25.4828 6.74697 25.355 6.58078 25.18 6.48C25.0049 6.37921 24.797 6.3521 24.602 6.40461C24.4069 6.45712 24.2407 6.58495 24.14 6.76L22.4 9.76C22.3501 9.84585 22.3177 9.94076 22.3048 10.0392C22.2919 10.1377 22.2987 10.2377 22.3247 10.3335C22.3508 10.4293 22.3956 10.519 22.4566 10.5974C22.5176 10.6757 22.5935 10.7412 22.68 10.79Z",fill:"white"}),e.jsx("path",{d:"M31.9 13.18C31.7999 13.0152 31.6409 12.8946 31.4553 12.8426C31.2696 12.7906 31.0711 12.8111 30.9 12.9L27.9 14.65C27.7209 14.7429 27.5861 14.903 27.5252 15.0952C27.4642 15.2874 27.4821 15.496 27.575 15.675C27.6678 15.8541 27.8279 15.9889 28.0202 16.0498C28.2124 16.1108 28.4209 16.0929 28.6 16L31.6 14.26C31.6929 14.2111 31.7748 14.1437 31.8407 14.062C31.9065 13.9803 31.955 13.8859 31.9831 13.7848C32.0112 13.6836 32.0183 13.5778 32.004 13.4738C31.9897 13.3698 31.9543 13.2698 31.9 13.18Z",fill:"white"})]}),e.jsx("defs",{children:e.jsx("clipPath",{id:"clip0_380_10",children:e.jsx("rect",{width:"50",height:"50",fill:"white"})})})]}),e.jsx("h2",{children:"Machine Learning Services"})]}),e.jsx("p",{children:"(under progress)"}),e.jsx("p",{className:"ambContent",children:"Our system integrates advanced machine learning algorithms to enhance data analysis and decision-making capabilities. It automates insights extraction, improving efficiency and accuracy in handling complex datasets for informed decision support."})]})}function w1(){return e.jsxs("div",{className:"stContainer",children:[e.jsxs("div",{className:"st",children:[e.jsxs("svg",{width:"50",height:"50",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[e.jsx("path",{d:"M16.5163 8.93457L11.0597 14.7024L8.09595 11.8985",stroke:"white","stroke-width":"2"}),e.jsx("path",{d:"M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21Z",stroke:"white","stroke-width":"2"})]}),e.jsx("h2",{children:"Status Based Queries"})]}),e.jsx("p",{className:"ambContent",children:"Our system allows users to retrieve and manipulate data using customizable statuses (true, false, or limit). This feature enhances query precision and flexibility, enabling tailored database interactions for accurate decision-making and analysis."})]})}function E1(){return e.jsxs("div",{className:"rustContainer",children:[e.jsxs("div",{className:"rust",children:[e.jsxs("svg",{width:"50",height:"50",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[e.jsx("g",{clipPath:"url(#clip0_382_28)",children:e.jsx("path",{d:"M23.687 11.709L22.692 11.093C22.6837 10.9963 22.6743 10.8996 22.664 10.803L23.519 10.006C23.5612 9.96602 23.5925 9.91595 23.6101 9.86052C23.6277 9.80509 23.631 9.7461 23.6196 9.68906C23.6082 9.63203 23.5826 9.57881 23.545 9.53438C23.5075 9.48996 23.4593 9.45578 23.405 9.43504L22.312 9.02604C22.2849 8.93154 22.2563 8.83752 22.226 8.74404L22.908 7.79704C22.9422 7.74972 22.9637 7.69443 22.9705 7.63644C22.9772 7.57845 22.9691 7.51969 22.9467 7.46576C22.9243 7.41183 22.8886 7.36451 22.8427 7.32833C22.7969 7.29214 22.7426 7.26829 22.685 7.25904L21.533 7.07204C21.488 6.98497 21.4417 6.89863 21.394 6.81304L21.878 5.75004C21.928 5.64204 21.917 5.51604 21.851 5.41804C21.785 5.32004 21.673 5.26204 21.554 5.26604L20.384 5.30704C20.3239 5.23103 20.2622 5.15635 20.199 5.08304L20.468 3.94404C20.4812 3.88724 20.4798 3.828 20.4638 3.77192C20.4478 3.71583 20.4177 3.66476 20.3765 3.62352C20.3352 3.58227 20.2842 3.55223 20.2281 3.53622C20.172 3.52022 20.1128 3.51878 20.056 3.53204L18.917 3.80104C18.8426 3.73858 18.7676 3.67691 18.692 3.61604L18.733 2.44604C18.7357 2.3875 18.7234 2.32923 18.697 2.27689C18.6706 2.22455 18.6312 2.17992 18.5825 2.14732C18.5338 2.11472 18.4775 2.09526 18.419 2.09083C18.3606 2.0864 18.302 2.09715 18.249 2.12204L17.186 2.60704C17.1 2.56004 17.014 2.51304 16.927 2.46804L16.739 1.31504C16.7292 1.25768 16.7051 1.20374 16.6688 1.15825C16.6325 1.11276 16.5853 1.07722 16.5316 1.05494C16.4778 1.03266 16.4193 1.02438 16.3615 1.03087C16.3037 1.03736 16.2484 1.0584 16.201 1.09204L15.253 1.77404C15.1595 1.74405 15.0655 1.71571 14.971 1.68904L14.562 0.596035C14.5412 0.5417 14.507 0.493511 14.4626 0.455973C14.4182 0.418435 14.365 0.392773 14.3079 0.381386C14.2509 0.369999 14.1919 0.373259 14.1365 0.39086C14.081 0.408462 14.031 0.439831 13.991 0.482035L13.194 1.33804C13.0974 1.32717 13.0008 1.31783 12.904 1.31004L12.288 0.315035C12.2573 0.265411 12.2145 0.224447 12.1636 0.196036C12.1126 0.167624 12.0553 0.15271 11.997 0.15271C11.9386 0.15271 11.8813 0.167624 11.8304 0.196036C11.7794 0.224447 11.7366 0.265411 11.706 0.315035L11.09 1.31004C10.993 1.31804 10.896 1.32804 10.8 1.33804L10.002 0.482035C9.9622 0.439309 9.91217 0.407469 9.85662 0.389545C9.80108 0.371622 9.74187 0.368211 9.68464 0.379638C9.6274 0.391065 9.57404 0.416949 9.52964 0.454827C9.48524 0.492705 9.45127 0.541317 9.43096 0.596035L9.02196 1.68904C8.92696 1.71604 8.83396 1.74504 8.73996 1.77404L7.79296 1.09204C7.74549 1.0584 7.69026 1.03736 7.63245 1.03087C7.57463 1.02438 7.51611 1.03266 7.46237 1.05494C7.40862 1.07722 7.36141 1.11276 7.32513 1.15825C7.28886 1.20374 7.26472 1.25768 7.25496 1.31504L7.06696 2.46804C6.9799 2.51299 6.89355 2.55933 6.80796 2.60704L5.74496 2.12204C5.69186 2.09775 5.63342 2.08746 5.57522 2.09216C5.51702 2.09685 5.46099 2.11637 5.41247 2.14885C5.36394 2.18133 5.32454 2.2257 5.29802 2.27772C5.2715 2.32974 5.25874 2.38769 5.26096 2.44604L5.30196 3.61604C5.22596 3.67604 5.15096 3.73804 5.07696 3.80104L3.93796 3.53204C3.88116 3.51878 3.82193 3.52022 3.76584 3.53622C3.70976 3.55223 3.65868 3.58227 3.61744 3.62352C3.5762 3.66476 3.54616 3.71583 3.53015 3.77192C3.51414 3.828 3.5127 3.88724 3.52596 3.94404L3.79396 5.08304C3.73196 5.15704 3.66996 5.23204 3.60996 5.30704L2.43996 5.26604C2.38161 5.26382 2.32367 5.27658 2.27164 5.3031C2.21962 5.32962 2.17526 5.36902 2.14278 5.41754C2.11029 5.46606 2.09078 5.52209 2.08608 5.5803C2.08139 5.6385 2.09167 5.69693 2.11596 5.75004L2.60096 6.81304C2.55323 6.89861 2.50689 6.98496 2.46196 7.07204L1.30996 7.25904C1.25261 7.26879 1.19866 7.29294 1.15318 7.32921C1.10769 7.36548 1.07214 7.4127 1.04987 7.46644C1.02759 7.52019 1.01931 7.57871 1.02579 7.63652C1.03228 7.69434 1.05333 7.74956 1.08696 7.79704L1.76896 8.74404C1.73896 8.83804 1.71096 8.93104 1.68296 9.02604L0.589961 9.43504C0.535626 9.45578 0.487437 9.48996 0.449899 9.53438C0.412361 9.57881 0.386699 9.63203 0.375312 9.68906C0.363925 9.7461 0.367184 9.80509 0.384786 9.86052C0.402388 9.91595 0.433757 9.96602 0.475961 10.006L1.33096 10.803C1.32009 10.8995 1.31076 10.9962 1.30296 11.093L0.307961 11.709C0.257863 11.7393 0.216429 11.782 0.18767 11.833C0.15891 11.884 0.143799 11.9415 0.143799 12C0.143799 12.0586 0.15891 12.1161 0.18767 12.1671C0.216429 12.2181 0.257863 12.2608 0.307961 12.291L1.30296 12.907C1.31096 13.004 1.32096 13.101 1.33096 13.197L0.475961 13.995C0.433234 14.0348 0.401394 14.0848 0.383471 14.1404C0.365547 14.1959 0.362136 14.2551 0.373563 14.3124C0.38499 14.3696 0.410875 14.423 0.448753 14.4674C0.486631 14.5118 0.535242 14.5457 0.589961 14.566L1.68296 14.975C1.70996 15.07 1.73896 15.164 1.76896 15.257L1.08696 16.204C1.05246 16.2513 1.03073 16.3067 1.02385 16.3649C1.01697 16.423 1.02518 16.482 1.04768 16.536C1.07019 16.5901 1.10623 16.6374 1.15234 16.6735C1.19846 16.7096 1.25308 16.7332 1.31096 16.742L2.46296 16.929C2.50796 17.016 2.55396 17.102 2.60196 17.188L2.11696 18.251C2.09267 18.3041 2.08239 18.3626 2.08708 18.4208C2.09178 18.479 2.11129 18.535 2.14378 18.5835C2.17626 18.6321 2.22062 18.6715 2.27264 18.698C2.32467 18.7245 2.38261 18.7373 2.44096 18.735L3.60996 18.694C3.67096 18.77 3.73196 18.845 3.79496 18.919L3.52696 20.059C3.51362 20.1158 3.51501 20.175 3.531 20.2311C3.547 20.2872 3.57706 20.3382 3.61835 20.3794C3.65963 20.4206 3.71076 20.4506 3.76688 20.4664C3.82299 20.4823 3.88223 20.4835 3.93896 20.47L5.07796 20.202C5.15196 20.265 5.22696 20.326 5.30296 20.386L5.26196 21.556C5.25935 21.6145 5.27187 21.6726 5.29831 21.7248C5.32475 21.777 5.36422 21.8215 5.41289 21.854C5.46156 21.8865 5.51779 21.9059 5.57614 21.9102C5.63449 21.9146 5.69298 21.9039 5.74596 21.879L6.80896 21.395C6.89496 21.443 6.98096 21.489 7.06796 21.534L7.25596 22.686C7.26558 22.7435 7.28962 22.7975 7.32583 22.8431C7.36205 22.8888 7.40925 22.9244 7.46302 22.9468C7.51678 22.9692 7.57535 22.9776 7.63323 22.9711C7.69112 22.9647 7.74642 22.9437 7.79396 22.91L8.74096 22.228C8.83496 22.258 8.92796 22.287 9.02296 22.314L9.43196 23.407C9.45204 23.4619 9.4859 23.5108 9.5303 23.5488C9.57469 23.5869 9.62812 23.6129 9.68546 23.6243C9.7428 23.6358 9.80212 23.6323 9.85772 23.6142C9.91332 23.5961 9.96333 23.564 10.003 23.521L10.801 22.666C10.897 22.677 10.994 22.686 11.091 22.695L11.707 23.69C11.7378 23.7394 11.7807 23.7802 11.8316 23.8084C11.8825 23.8366 11.9397 23.8515 11.998 23.8515C12.0562 23.8515 12.1134 23.8366 12.1643 23.8084C12.2153 23.7802 12.2581 23.7394 12.289 23.69L12.905 22.695C13.002 22.686 13.099 22.677 13.195 22.666L13.992 23.521C14.032 23.5632 14.082 23.5946 14.1375 23.6122C14.1929 23.6298 14.2519 23.6331 14.3089 23.6217C14.366 23.6103 14.4192 23.5846 14.4636 23.5471C14.508 23.5096 14.5422 23.4614 14.563 23.407L14.972 22.314C15.067 22.287 15.161 22.258 15.254 22.228L16.201 22.91C16.2483 22.9445 16.3037 22.9663 16.3618 22.9731C16.42 22.98 16.4789 22.9718 16.5329 22.9493C16.587 22.9268 16.6343 22.8908 16.6704 22.8447C16.7065 22.7985 16.7301 22.7439 16.739 22.686L16.927 21.534C17.014 21.489 17.1 21.442 17.186 21.395L18.249 21.879C18.302 21.903 18.3603 21.913 18.4183 21.9083C18.4763 21.9035 18.5321 21.884 18.5805 21.8517C18.6289 21.8194 18.6683 21.7753 18.695 21.7236C18.7217 21.6719 18.7347 21.6142 18.733 21.556L18.692 20.386C18.768 20.326 18.843 20.265 18.916 20.202L20.055 20.47C20.1117 20.4832 20.1708 20.4818 20.2268 20.4658C20.2827 20.4498 20.3337 20.4199 20.3749 20.3788C20.4162 20.3377 20.4462 20.2868 20.4623 20.2308C20.4784 20.1749 20.48 20.1158 20.467 20.059L20.199 18.919C20.261 18.845 20.323 18.77 20.383 18.694L21.553 18.735C21.6115 18.7378 21.6698 18.7254 21.7221 18.6991C21.7744 18.6727 21.8191 18.6333 21.8517 18.5846C21.8843 18.5359 21.9037 18.4796 21.9082 18.4211C21.9126 18.3627 21.9018 18.3041 21.877 18.251L21.393 17.188C21.44 17.102 21.487 17.016 21.532 16.929L22.684 16.742C22.7413 16.7323 22.7953 16.7081 22.8407 16.6719C22.8862 16.6356 22.9218 16.5884 22.9441 16.5346C22.9663 16.4809 22.9746 16.4224 22.9681 16.3645C22.9616 16.3067 22.9406 16.2515 22.907 16.204L22.225 15.257L22.311 14.975L23.404 14.566C23.4587 14.5457 23.5073 14.5118 23.5452 14.4674C23.583 14.423 23.6089 14.3696 23.6204 14.3124C23.6318 14.2551 23.6284 14.1959 23.6105 14.1404C23.5925 14.0848 23.5607 14.0348 23.518 13.995L22.663 13.197C22.673 13.101 22.683 13.004 22.691 12.907L23.686 12.291C23.7361 12.2608 23.7775 12.2181 23.8063 12.1671C23.835 12.1161 23.8501 12.0586 23.8501 12C23.8501 11.9415 23.835 11.884 23.8063 11.833C23.7775 11.782 23.7371 11.7393 23.687 11.709ZM17.028 19.962C16.9374 19.9427 16.8516 19.9056 16.7753 19.8531C16.6991 19.8006 16.6339 19.7335 16.5836 19.6558C16.482 19.4988 16.4468 19.3079 16.486 19.125C16.5053 19.0345 16.5423 18.9486 16.5949 18.8724C16.6474 18.7962 16.7145 18.731 16.7922 18.6807C16.9492 18.579 17.1401 18.5439 17.323 18.583C17.4135 18.6025 17.4993 18.6395 17.5756 18.6922C17.6518 18.7448 17.7169 18.8119 17.7672 18.8896C17.8174 18.9674 17.8519 19.0543 17.8686 19.1454C17.8853 19.2365 17.8839 19.33 17.8645 19.4205C17.845 19.5111 17.8079 19.5969 17.7553 19.6731C17.7027 19.7493 17.6356 19.8145 17.5579 19.8647C17.4801 19.915 17.3932 19.9495 17.3021 19.9662C17.211 19.9829 17.1185 19.9815 17.028 19.962ZM16.69 17.676C16.6075 17.6583 16.5223 17.657 16.4393 17.6722C16.3563 17.6875 16.2772 17.7189 16.2064 17.7648C16.1356 17.8107 16.0746 17.8701 16.0268 17.9397C15.979 18.0092 15.9454 18.0875 15.928 18.17L15.575 19.818C14.485 20.313 13.275 20.588 12 20.588C10.7392 20.5899 9.49329 20.3154 8.34996 19.784L7.99696 18.136C7.97951 18.0535 7.94592 17.9753 7.89813 17.9058C7.85033 17.8363 7.78927 17.7769 7.71846 17.7311C7.64765 17.6853 7.56848 17.6539 7.4855 17.6388C7.40253 17.6237 7.31738 17.6251 7.23496 17.643L5.77996 17.955C5.5096 17.6766 5.25836 17.3803 5.02796 17.068H12.108C12.188 17.068 12.242 17.054 12.242 16.981V14.476C12.242 14.403 12.189 14.389 12.108 14.389H10.037V12.801H12.277C12.481 12.801 13.37 12.859 13.654 13.995C13.743 14.344 13.938 15.481 14.072 15.845C14.205 16.253 14.747 17.068 15.325 17.068H18.853C18.8959 17.0674 18.9388 17.0631 18.981 17.055C18.7363 17.3874 18.4683 17.7018 18.179 17.996L16.69 17.676ZM6.89696 19.928C6.80641 19.9475 6.71293 19.9489 6.62183 19.9322C6.53074 19.9155 6.44383 19.881 6.36606 19.8307C6.28829 19.7805 6.22119 19.7153 6.16858 19.6391C6.11598 19.5629 6.0789 19.4771 6.05946 19.3865C6.04003 19.296 6.03861 19.2025 6.05531 19.1114C6.072 19.0203 6.10648 18.9334 6.15676 18.8556C6.20704 18.7779 6.27215 18.7108 6.34837 18.6582C6.42458 18.6056 6.51041 18.5685 6.60096 18.549C6.78383 18.5098 6.9748 18.5448 7.13186 18.6463C7.28892 18.7479 7.39921 18.9077 7.43846 19.0905C7.47771 19.2734 7.44271 19.4644 7.34116 19.6214C7.23961 19.7785 7.07983 19.8888 6.89696 19.928ZM4.21096 9.03604C4.252 9.12111 4.27552 9.21356 4.28013 9.30789C4.28474 9.40223 4.27035 9.49654 4.23782 9.5852C4.20528 9.67387 4.15525 9.7551 4.09071 9.82406C4.02617 9.89302 3.94844 9.94831 3.86211 9.98665C3.77579 10.025 3.68265 10.0456 3.58821 10.0472C3.49378 10.0489 3.39997 10.0315 3.31237 9.99619C3.22477 9.96088 3.14516 9.90832 3.07827 9.84164C3.01137 9.77496 2.95856 9.69552 2.92296 9.60804C2.85394 9.43841 2.85363 9.24858 2.92211 9.07873C2.99058 8.90888 3.12246 8.77234 3.28983 8.69801C3.4572 8.62368 3.64693 8.61739 3.81885 8.68048C3.99077 8.74358 4.1314 8.87109 4.21096 9.03604ZM3.38596 10.993L4.90196 10.319C4.97908 10.2848 5.0487 10.2357 5.10683 10.1745C5.16496 10.1134 5.21047 10.0414 5.24075 9.96261C5.27102 9.88385 5.28548 9.7999 5.28328 9.71555C5.28109 9.6312 5.26229 9.54811 5.22796 9.47104L4.91596 8.76504H6.14396V14.299H3.66696C3.3615 13.225 3.26642 12.1021 3.38696 10.992L3.38596 10.993ZM10.038 10.456V8.82504H12.962C13.113 8.82504 14.028 9.00004 14.028 9.68404C14.028 10.252 13.326 10.456 12.749 10.456H10.038ZM20.664 11.924C20.664 12.14 20.656 12.355 20.64 12.567H19.751C19.662 12.567 19.626 12.625 19.626 12.713V13.121C19.626 14.082 19.084 14.291 18.609 14.344C18.157 14.395 17.656 14.155 17.594 13.878C17.327 12.378 16.883 12.057 16.181 11.504C17.052 10.951 17.958 10.135 17.958 9.04304C17.958 7.86404 17.149 7.12104 16.598 6.75604C15.825 6.24604 14.969 6.14404 14.738 6.14404H5.54496C6.81546 4.72341 8.5192 3.7617 10.392 3.40804L11.476 4.54504C11.534 4.60615 11.6036 4.65518 11.6807 4.68933C11.7578 4.72348 11.8408 4.74206 11.9251 4.74401C12.0094 4.74596 12.0932 4.73124 12.1718 4.7007C12.2504 4.67016 12.3221 4.62439 12.383 4.56604L13.595 3.40604C14.8308 3.63781 16.0013 4.13566 17.0255 4.86506C18.0497 5.59446 18.9029 6.53793 19.526 7.63004L18.696 9.50504C18.6272 9.66077 18.6229 9.83741 18.6839 9.99632C18.745 10.1552 18.8666 10.2835 19.022 10.353L20.62 11.063C20.648 11.347 20.662 11.633 20.662 11.924H20.664ZM11.477 2.44204C11.5439 2.37821 11.6227 2.32819 11.7089 2.29483C11.7952 2.26148 11.8871 2.24543 11.9796 2.24761C12.072 2.24979 12.1631 2.27016 12.2477 2.30755C12.3323 2.34494 12.4086 2.39863 12.4725 2.46554C12.5363 2.53244 12.5863 2.61127 12.6197 2.69751C12.653 2.78375 12.6691 2.87571 12.6669 2.96815C12.6647 3.06059 12.6443 3.1517 12.6069 3.23627C12.5696 3.32084 12.5159 3.39721 12.449 3.46104C12.312 3.5792 12.1349 3.64019 11.9542 3.63141C11.7735 3.62263 11.6031 3.54474 11.4783 3.41385C11.3534 3.28296 11.2837 3.10909 11.2834 2.92821C11.2832 2.74732 11.3525 2.57326 11.477 2.44204ZM19.714 9.07003C19.871 8.71403 20.287 8.55404 20.642 8.71204C20.7696 8.76835 20.8776 8.86127 20.9524 8.97902C21.0272 9.09677 21.0654 9.23407 21.0622 9.37353C21.0589 9.51299 21.0143 9.64835 20.9341 9.76247C20.8539 9.8766 20.7416 9.96435 20.6115 10.0146C20.4813 10.0649 20.3392 10.0755 20.2031 10.045C20.067 10.0144 19.943 9.94422 19.8468 9.84319C19.7506 9.74217 19.6865 9.61487 19.6627 9.47742C19.6389 9.33997 19.6564 9.19854 19.713 9.07104L19.714 9.07003Z",fill:"white"})}),e.jsx("defs",{children:e.jsx("clipPath",{id:"clip0_382_28",children:e.jsx("rect",{width:"24",height:"24",fill:"white"})})})]}),e.jsx("h2",{children:"Rust-Powered Database Engine"})]}),e.jsx("p",{className:"ambContent",children:"Our database engine, developed in Rust, combines robust performance with modern features, ensuring reliability, efficiency, and scalability for data-intensive applications."})]})}function T1(){const[s,r]=a.useState(0),n=()=>{r(window.scrollY)};a.useEffect(()=>(window.addEventListener("scroll",n),()=>{window.removeEventListener("scroll",n)}),[]);const C=()=>{const i=E("#0F4C81"),d=E("#00C6BB"),o=E("#1C857E"),c=E("#334B49"),x=document.body.scrollHeight-window.innerHeight,p=Math.min(s/x,1),L=T(w(i,d,p)),f=T(w(d,o,p)),b=T(w(o,c,p)),m=T(w(c,i,p));return`linear-gradient(to bottom right, ${L}, ${f}, ${b}, ${m})`};return e.jsxs("div",{className:"overviewContainer",children:[e.jsx(p1,{mode:"linear"}),e.jsx("div",{className:"content",children:e.jsxs("div",{className:"sections",children:[e.jsx("div",{id:"introduction",style:{background:C()},children:e.jsxs("div",{className:"glass",children:[e.jsx("h2",{children:"Welcome to the Triadic SQL Engine"}),e.jsxs("p",{children:["Triadic SQL Engine is a web-based SQL engine that addresses the challenges of",e.jsx("strong",{children:" indeterminacy"}),",",e.jsx("br",{})," including ambiguity, vagueness, missing, and incomplete information in databases.It presents a ",e.jsx("strong",{children:"Peircean alternative"})," to existing ",e.jsx("strong",{children:"Boolean/Binary"})," and fuzzy logic-based database systems.At the heart of","this engine is ",e.jsx("strong",{children:"Peirce's Triadic Logic"}),", which forms the core of its functionality."]})]})}),e.jsxs("div",{className:"nom_example",children:[e.jsx("h2",{id:"handing_1",children:"SIGNIFICANT FEATURE PROSPECTIVE"}),e.jsxs("div",{className:"key-features",children:[e.jsx(g1,{}),e.jsx(L1,{}),e.jsx(f1,{}),e.jsx(b1,{}),e.jsx(w1,{}),e.jsx(E1,{})]})]}),e.jsx("div",{className:"nom_example1",children:e.jsx("h1",{children:"How Automated The Normalization?"})}),e.jsxs("div",{className:"nom_example",children:[e.jsx("h3",{children:"Her assume this data in physical register."}),e.jsxs("table",{children:[e.jsxs("tr",{children:[e.jsx("th",{children:"Cnic"}),e.jsx("th",{children:"Name"}),e.jsx("th",{children:"Phone"}),e.jsx("th",{children:"Age"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#001"}),e.jsx("td",{children:"example#1"}),e.jsx("td",{children:"+92 123"}),e.jsx("td",{children:"14"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#002"}),e.jsx("td",{children:"example#2"}),e.jsx("td",{children:"+92 123"}),e.jsx("td",{children:"12"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#003"}),e.jsx("td",{children:"example#3"}),e.jsx("td",{children:"+92 123"}),e.jsx("td",{children:"18"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#004"}),e.jsx("td",{children:"example#4"}),e.jsx("td",{children:"+92 123"}),e.jsx("td",{children:"28"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#004"}),e.jsx("td",{children:"example#5"}),e.jsx("td",{children:"+92 123"}),e.jsx("td",{children:"48"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#005"}),e.jsx("td",{children:"example#6"}),e.jsx("td",{children:"+92 123"}),e.jsx("td",{children:"38"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#006"}),e.jsx("td",{children:"example#7"}),e.jsx("td",{children:"+92 123"}),e.jsx("td",{children:"48"})]})]}),e.jsx("h2",{children:"In Boolean database if we need insert data first resolve this duplication because here if we set cnic is primary then must resolve this then enter in system but in Triadic Logic we can insert in database and then you resolve in database any time."}),e.jsx("h1",{children:"Insert data into Triadic Table"}),e.jsxs("table",{children:[e.jsxs("tr",{children:[e.jsx("th",{children:"Cnic pk(T)"}),e.jsx("th",{children:"Name"}),e.jsx("th",{children:"Phone"}),e.jsx("th",{children:"Age"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#001 :T"}),e.jsx("td",{children:"example#1 :T"}),e.jsx("td",{children:"+92 123 :T"}),e.jsx("td",{children:"14 :T"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#002 :T"}),e.jsx("td",{children:"example#2 :T"}),e.jsx("td",{children:"+92 123 :T"}),e.jsx("td",{children:"12 :T"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#003 :T"}),e.jsx("td",{children:"example#3 :T"}),e.jsx("td",{children:"+92 123 :T"}),e.jsx("td",{children:"18 :T"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#004 :T"}),e.jsx("td",{children:"example#4 :T"}),e.jsx("td",{children:"+92 123 :T"}),e.jsx("td",{children:"28 :T"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#004 :L"}),e.jsx("td",{children:"example#5 :T"}),e.jsx("td",{children:"+92 123 :T"}),e.jsx("td",{children:"48 :T"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#005 :T"}),e.jsx("td",{children:"example#6 :T"}),e.jsx("td",{children:"+92 123 :T"}),e.jsx("td",{children:"38 :T"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"#006 :T"}),e.jsx("td",{children:"example#7 :T"}),e.jsx("td",{children:"+92 123 :T"}),e.jsx("td",{children:"38 :T"})]})]}),e.jsx("h2",{children:"When find example#5 cnic then you can change,before this we able to see using cnic limit."})]})]})})]})}const y1=()=>{console.log("Logout function"),localStorage.removeItem("token"),window.location.reload(),window.location.href="https://waleedzafar4578.github.io/TriadicGui/"},v1=()=>e.jsxs(i1,{basename:"/TriadicGui",children:[" ",e.jsx("nav",{id:"menu_bar",children:e.jsxs("ul",{children:[e.jsx("li",{className:"menu-item",children:e.jsx(M,{to:"/",children:"Overview"})}),e.jsx("li",{className:"menu-item",children:e.jsx(M,{to:"/editor",children:"Play Ground"})}),e.jsx("li",{className:"menu-item",children:e.jsx(M,{to:"/result",children:"Quick Start"})}),e.jsx("li",{className:"menu-item-logout",children:e.jsx("button",{onClick:y1,className:"logout-button",children:"Logout"})})]})}),e.jsxs(c1,{children:[e.jsx(A,{path:"/",element:e.jsx(T1,{})}),e.jsx(A,{path:"/editor",element:e.jsx(m1,{})}),e.jsx(A,{path:"/result",element:e.jsx(u1,{})})]})]});function M1(){a.useState(!1);const[s,r]=a.useState(!1);return a.useEffect(()=>{const n=localStorage.getItem("token");console.log(n)},[]),a.useEffect(()=>{const n=localStorage.getItem("token");r(!!n)},[]),a.useEffect(()=>{const C=setInterval(async()=>{const i=localStorage.getItem("token"),d=await fetch(S.token_check_api,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:i})});if(console.log(d),!d.ok)throw localStorage.removeItem("token"),new Error("Something wrong when check token");(await d.json()).find_token||(localStorage.removeItem("token"),console.log("Token removed from local storage because server discontinue with this token."),window.location.reload())},5e3);return()=>clearInterval(C)},[]),e.jsx(v1,{})}e1.createRoot(document.getElementById("root")).render(e.jsx(J.StrictMode,{children:e.jsx(M1,{})}));
